
EXTI_driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000cde  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000006  00800060  00800060  00000d52  2**0
                  ALLOC
  2 .stab         00000ce4  00000000  00000000  00000d54  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000633  00000000  00000000  00001a38  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 98 05 	jmp	0xb30	; 0xb30 <__vector_1>
   8:	0c 94 cb 05 	jmp	0xb96	; 0xb96 <__vector_2>
   c:	0c 94 fe 05 	jmp	0xbfc	; 0xbfc <__vector_3>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a6 36       	cpi	r26, 0x66	; 102
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 5e 06 	call	0xcbc	; 0xcbc <main>
  74:	0c 94 6d 06 	jmp	0xcda	; 0xcda <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <DIO_voidSetPinDirection>:
#include "Bit_Math.h"
#include "DIO_config.h"
#include "DIO_private.h"
#include "DIO_interface.h"

void DIO_voidSetPinDirection(u8 Copy_u8PortID,u8 Copy_u8PinID,u8 Copy_u8PinDir){
  7c:	df 93       	push	r29
  7e:	cf 93       	push	r28
  80:	cd b7       	in	r28, 0x3d	; 61
  82:	de b7       	in	r29, 0x3e	; 62
  84:	27 97       	sbiw	r28, 0x07	; 7
  86:	0f b6       	in	r0, 0x3f	; 63
  88:	f8 94       	cli
  8a:	de bf       	out	0x3e, r29	; 62
  8c:	0f be       	out	0x3f, r0	; 63
  8e:	cd bf       	out	0x3d, r28	; 61
  90:	89 83       	std	Y+1, r24	; 0x01
  92:	6a 83       	std	Y+2, r22	; 0x02
  94:	4b 83       	std	Y+3, r20	; 0x03
	if(Copy_u8PinDir==PIN_OUTPUT){     //output
  96:	8b 81       	ldd	r24, Y+3	; 0x03
  98:	81 30       	cpi	r24, 0x01	; 1
  9a:	09 f0       	breq	.+2      	; 0x9e <DIO_voidSetPinDirection+0x22>
  9c:	6f c0       	rjmp	.+222    	; 0x17c <DIO_voidSetPinDirection+0x100>
		switch(Copy_u8PortID){
  9e:	89 81       	ldd	r24, Y+1	; 0x01
  a0:	28 2f       	mov	r18, r24
  a2:	30 e0       	ldi	r19, 0x00	; 0
  a4:	3f 83       	std	Y+7, r19	; 0x07
  a6:	2e 83       	std	Y+6, r18	; 0x06
  a8:	8e 81       	ldd	r24, Y+6	; 0x06
  aa:	9f 81       	ldd	r25, Y+7	; 0x07
  ac:	81 30       	cpi	r24, 0x01	; 1
  ae:	91 05       	cpc	r25, r1
  b0:	49 f1       	breq	.+82     	; 0x104 <DIO_voidSetPinDirection+0x88>
  b2:	2e 81       	ldd	r18, Y+6	; 0x06
  b4:	3f 81       	ldd	r19, Y+7	; 0x07
  b6:	22 30       	cpi	r18, 0x02	; 2
  b8:	31 05       	cpc	r19, r1
  ba:	2c f4       	brge	.+10     	; 0xc6 <DIO_voidSetPinDirection+0x4a>
  bc:	8e 81       	ldd	r24, Y+6	; 0x06
  be:	9f 81       	ldd	r25, Y+7	; 0x07
  c0:	00 97       	sbiw	r24, 0x00	; 0
  c2:	61 f0       	breq	.+24     	; 0xdc <DIO_voidSetPinDirection+0x60>
  c4:	d2 c0       	rjmp	.+420    	; 0x26a <DIO_voidSetPinDirection+0x1ee>
  c6:	2e 81       	ldd	r18, Y+6	; 0x06
  c8:	3f 81       	ldd	r19, Y+7	; 0x07
  ca:	22 30       	cpi	r18, 0x02	; 2
  cc:	31 05       	cpc	r19, r1
  ce:	71 f1       	breq	.+92     	; 0x12c <DIO_voidSetPinDirection+0xb0>
  d0:	8e 81       	ldd	r24, Y+6	; 0x06
  d2:	9f 81       	ldd	r25, Y+7	; 0x07
  d4:	83 30       	cpi	r24, 0x03	; 3
  d6:	91 05       	cpc	r25, r1
  d8:	e9 f1       	breq	.+122    	; 0x154 <DIO_voidSetPinDirection+0xd8>
  da:	c7 c0       	rjmp	.+398    	; 0x26a <DIO_voidSetPinDirection+0x1ee>
			case PORTA/*Port A*/: SetBit(DDRA_REG,Copy_u8PinID);break;
  dc:	aa e3       	ldi	r26, 0x3A	; 58
  de:	b0 e0       	ldi	r27, 0x00	; 0
  e0:	ea e3       	ldi	r30, 0x3A	; 58
  e2:	f0 e0       	ldi	r31, 0x00	; 0
  e4:	80 81       	ld	r24, Z
  e6:	48 2f       	mov	r20, r24
  e8:	8a 81       	ldd	r24, Y+2	; 0x02
  ea:	28 2f       	mov	r18, r24
  ec:	30 e0       	ldi	r19, 0x00	; 0
  ee:	81 e0       	ldi	r24, 0x01	; 1
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	02 2e       	mov	r0, r18
  f4:	02 c0       	rjmp	.+4      	; 0xfa <DIO_voidSetPinDirection+0x7e>
  f6:	88 0f       	add	r24, r24
  f8:	99 1f       	adc	r25, r25
  fa:	0a 94       	dec	r0
  fc:	e2 f7       	brpl	.-8      	; 0xf6 <DIO_voidSetPinDirection+0x7a>
  fe:	84 2b       	or	r24, r20
 100:	8c 93       	st	X, r24
 102:	b3 c0       	rjmp	.+358    	; 0x26a <DIO_voidSetPinDirection+0x1ee>
			case PORTB/*Port B*/: SetBit(DDRB_REG,Copy_u8PinID);break;
 104:	a7 e3       	ldi	r26, 0x37	; 55
 106:	b0 e0       	ldi	r27, 0x00	; 0
 108:	e7 e3       	ldi	r30, 0x37	; 55
 10a:	f0 e0       	ldi	r31, 0x00	; 0
 10c:	80 81       	ld	r24, Z
 10e:	48 2f       	mov	r20, r24
 110:	8a 81       	ldd	r24, Y+2	; 0x02
 112:	28 2f       	mov	r18, r24
 114:	30 e0       	ldi	r19, 0x00	; 0
 116:	81 e0       	ldi	r24, 0x01	; 1
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	02 2e       	mov	r0, r18
 11c:	02 c0       	rjmp	.+4      	; 0x122 <DIO_voidSetPinDirection+0xa6>
 11e:	88 0f       	add	r24, r24
 120:	99 1f       	adc	r25, r25
 122:	0a 94       	dec	r0
 124:	e2 f7       	brpl	.-8      	; 0x11e <DIO_voidSetPinDirection+0xa2>
 126:	84 2b       	or	r24, r20
 128:	8c 93       	st	X, r24
 12a:	9f c0       	rjmp	.+318    	; 0x26a <DIO_voidSetPinDirection+0x1ee>
			case PORTC/*Port C*/: SetBit(DDRC_REG,Copy_u8PinID);break;
 12c:	a4 e3       	ldi	r26, 0x34	; 52
 12e:	b0 e0       	ldi	r27, 0x00	; 0
 130:	e4 e3       	ldi	r30, 0x34	; 52
 132:	f0 e0       	ldi	r31, 0x00	; 0
 134:	80 81       	ld	r24, Z
 136:	48 2f       	mov	r20, r24
 138:	8a 81       	ldd	r24, Y+2	; 0x02
 13a:	28 2f       	mov	r18, r24
 13c:	30 e0       	ldi	r19, 0x00	; 0
 13e:	81 e0       	ldi	r24, 0x01	; 1
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	02 2e       	mov	r0, r18
 144:	02 c0       	rjmp	.+4      	; 0x14a <DIO_voidSetPinDirection+0xce>
 146:	88 0f       	add	r24, r24
 148:	99 1f       	adc	r25, r25
 14a:	0a 94       	dec	r0
 14c:	e2 f7       	brpl	.-8      	; 0x146 <DIO_voidSetPinDirection+0xca>
 14e:	84 2b       	or	r24, r20
 150:	8c 93       	st	X, r24
 152:	8b c0       	rjmp	.+278    	; 0x26a <DIO_voidSetPinDirection+0x1ee>
			case PORTD/*Port D*/: SetBit(DDRD_REG,Copy_u8PinID);break;
 154:	a1 e3       	ldi	r26, 0x31	; 49
 156:	b0 e0       	ldi	r27, 0x00	; 0
 158:	e1 e3       	ldi	r30, 0x31	; 49
 15a:	f0 e0       	ldi	r31, 0x00	; 0
 15c:	80 81       	ld	r24, Z
 15e:	48 2f       	mov	r20, r24
 160:	8a 81       	ldd	r24, Y+2	; 0x02
 162:	28 2f       	mov	r18, r24
 164:	30 e0       	ldi	r19, 0x00	; 0
 166:	81 e0       	ldi	r24, 0x01	; 1
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	02 2e       	mov	r0, r18
 16c:	02 c0       	rjmp	.+4      	; 0x172 <DIO_voidSetPinDirection+0xf6>
 16e:	88 0f       	add	r24, r24
 170:	99 1f       	adc	r25, r25
 172:	0a 94       	dec	r0
 174:	e2 f7       	brpl	.-8      	; 0x16e <DIO_voidSetPinDirection+0xf2>
 176:	84 2b       	or	r24, r20
 178:	8c 93       	st	X, r24
 17a:	77 c0       	rjmp	.+238    	; 0x26a <DIO_voidSetPinDirection+0x1ee>
		}
	}
	else if(Copy_u8PinDir==PIN_INPUT){ //input
 17c:	8b 81       	ldd	r24, Y+3	; 0x03
 17e:	88 23       	and	r24, r24
 180:	09 f0       	breq	.+2      	; 0x184 <DIO_voidSetPinDirection+0x108>
 182:	73 c0       	rjmp	.+230    	; 0x26a <DIO_voidSetPinDirection+0x1ee>
		switch(Copy_u8PortID){
 184:	89 81       	ldd	r24, Y+1	; 0x01
 186:	28 2f       	mov	r18, r24
 188:	30 e0       	ldi	r19, 0x00	; 0
 18a:	3d 83       	std	Y+5, r19	; 0x05
 18c:	2c 83       	std	Y+4, r18	; 0x04
 18e:	8c 81       	ldd	r24, Y+4	; 0x04
 190:	9d 81       	ldd	r25, Y+5	; 0x05
 192:	81 30       	cpi	r24, 0x01	; 1
 194:	91 05       	cpc	r25, r1
 196:	59 f1       	breq	.+86     	; 0x1ee <DIO_voidSetPinDirection+0x172>
 198:	2c 81       	ldd	r18, Y+4	; 0x04
 19a:	3d 81       	ldd	r19, Y+5	; 0x05
 19c:	22 30       	cpi	r18, 0x02	; 2
 19e:	31 05       	cpc	r19, r1
 1a0:	2c f4       	brge	.+10     	; 0x1ac <DIO_voidSetPinDirection+0x130>
 1a2:	8c 81       	ldd	r24, Y+4	; 0x04
 1a4:	9d 81       	ldd	r25, Y+5	; 0x05
 1a6:	00 97       	sbiw	r24, 0x00	; 0
 1a8:	69 f0       	breq	.+26     	; 0x1c4 <DIO_voidSetPinDirection+0x148>
 1aa:	5f c0       	rjmp	.+190    	; 0x26a <DIO_voidSetPinDirection+0x1ee>
 1ac:	2c 81       	ldd	r18, Y+4	; 0x04
 1ae:	3d 81       	ldd	r19, Y+5	; 0x05
 1b0:	22 30       	cpi	r18, 0x02	; 2
 1b2:	31 05       	cpc	r19, r1
 1b4:	89 f1       	breq	.+98     	; 0x218 <DIO_voidSetPinDirection+0x19c>
 1b6:	8c 81       	ldd	r24, Y+4	; 0x04
 1b8:	9d 81       	ldd	r25, Y+5	; 0x05
 1ba:	83 30       	cpi	r24, 0x03	; 3
 1bc:	91 05       	cpc	r25, r1
 1be:	09 f4       	brne	.+2      	; 0x1c2 <DIO_voidSetPinDirection+0x146>
 1c0:	40 c0       	rjmp	.+128    	; 0x242 <DIO_voidSetPinDirection+0x1c6>
 1c2:	53 c0       	rjmp	.+166    	; 0x26a <DIO_voidSetPinDirection+0x1ee>
			case PORTA/*Port A*/: ClrBit(DDRA_REG,Copy_u8PinID);break;
 1c4:	aa e3       	ldi	r26, 0x3A	; 58
 1c6:	b0 e0       	ldi	r27, 0x00	; 0
 1c8:	ea e3       	ldi	r30, 0x3A	; 58
 1ca:	f0 e0       	ldi	r31, 0x00	; 0
 1cc:	80 81       	ld	r24, Z
 1ce:	48 2f       	mov	r20, r24
 1d0:	8a 81       	ldd	r24, Y+2	; 0x02
 1d2:	28 2f       	mov	r18, r24
 1d4:	30 e0       	ldi	r19, 0x00	; 0
 1d6:	81 e0       	ldi	r24, 0x01	; 1
 1d8:	90 e0       	ldi	r25, 0x00	; 0
 1da:	02 2e       	mov	r0, r18
 1dc:	02 c0       	rjmp	.+4      	; 0x1e2 <DIO_voidSetPinDirection+0x166>
 1de:	88 0f       	add	r24, r24
 1e0:	99 1f       	adc	r25, r25
 1e2:	0a 94       	dec	r0
 1e4:	e2 f7       	brpl	.-8      	; 0x1de <DIO_voidSetPinDirection+0x162>
 1e6:	80 95       	com	r24
 1e8:	84 23       	and	r24, r20
 1ea:	8c 93       	st	X, r24
 1ec:	3e c0       	rjmp	.+124    	; 0x26a <DIO_voidSetPinDirection+0x1ee>
			case PORTB/*Port B*/: ClrBit(DDRB_REG,Copy_u8PinID);break;
 1ee:	a7 e3       	ldi	r26, 0x37	; 55
 1f0:	b0 e0       	ldi	r27, 0x00	; 0
 1f2:	e7 e3       	ldi	r30, 0x37	; 55
 1f4:	f0 e0       	ldi	r31, 0x00	; 0
 1f6:	80 81       	ld	r24, Z
 1f8:	48 2f       	mov	r20, r24
 1fa:	8a 81       	ldd	r24, Y+2	; 0x02
 1fc:	28 2f       	mov	r18, r24
 1fe:	30 e0       	ldi	r19, 0x00	; 0
 200:	81 e0       	ldi	r24, 0x01	; 1
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	02 2e       	mov	r0, r18
 206:	02 c0       	rjmp	.+4      	; 0x20c <DIO_voidSetPinDirection+0x190>
 208:	88 0f       	add	r24, r24
 20a:	99 1f       	adc	r25, r25
 20c:	0a 94       	dec	r0
 20e:	e2 f7       	brpl	.-8      	; 0x208 <DIO_voidSetPinDirection+0x18c>
 210:	80 95       	com	r24
 212:	84 23       	and	r24, r20
 214:	8c 93       	st	X, r24
 216:	29 c0       	rjmp	.+82     	; 0x26a <DIO_voidSetPinDirection+0x1ee>
			case PORTC/*Port C*/: ClrBit(DDRC_REG,Copy_u8PinID);break;
 218:	a4 e3       	ldi	r26, 0x34	; 52
 21a:	b0 e0       	ldi	r27, 0x00	; 0
 21c:	e4 e3       	ldi	r30, 0x34	; 52
 21e:	f0 e0       	ldi	r31, 0x00	; 0
 220:	80 81       	ld	r24, Z
 222:	48 2f       	mov	r20, r24
 224:	8a 81       	ldd	r24, Y+2	; 0x02
 226:	28 2f       	mov	r18, r24
 228:	30 e0       	ldi	r19, 0x00	; 0
 22a:	81 e0       	ldi	r24, 0x01	; 1
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	02 2e       	mov	r0, r18
 230:	02 c0       	rjmp	.+4      	; 0x236 <DIO_voidSetPinDirection+0x1ba>
 232:	88 0f       	add	r24, r24
 234:	99 1f       	adc	r25, r25
 236:	0a 94       	dec	r0
 238:	e2 f7       	brpl	.-8      	; 0x232 <DIO_voidSetPinDirection+0x1b6>
 23a:	80 95       	com	r24
 23c:	84 23       	and	r24, r20
 23e:	8c 93       	st	X, r24
 240:	14 c0       	rjmp	.+40     	; 0x26a <DIO_voidSetPinDirection+0x1ee>
			case PORTD/*Port D*/: ClrBit(DDRD_REG,Copy_u8PinID);break;
 242:	a1 e3       	ldi	r26, 0x31	; 49
 244:	b0 e0       	ldi	r27, 0x00	; 0
 246:	e1 e3       	ldi	r30, 0x31	; 49
 248:	f0 e0       	ldi	r31, 0x00	; 0
 24a:	80 81       	ld	r24, Z
 24c:	48 2f       	mov	r20, r24
 24e:	8a 81       	ldd	r24, Y+2	; 0x02
 250:	28 2f       	mov	r18, r24
 252:	30 e0       	ldi	r19, 0x00	; 0
 254:	81 e0       	ldi	r24, 0x01	; 1
 256:	90 e0       	ldi	r25, 0x00	; 0
 258:	02 2e       	mov	r0, r18
 25a:	02 c0       	rjmp	.+4      	; 0x260 <DIO_voidSetPinDirection+0x1e4>
 25c:	88 0f       	add	r24, r24
 25e:	99 1f       	adc	r25, r25
 260:	0a 94       	dec	r0
 262:	e2 f7       	brpl	.-8      	; 0x25c <DIO_voidSetPinDirection+0x1e0>
 264:	80 95       	com	r24
 266:	84 23       	and	r24, r20
 268:	8c 93       	st	X, r24
		}
	}
}
 26a:	27 96       	adiw	r28, 0x07	; 7
 26c:	0f b6       	in	r0, 0x3f	; 63
 26e:	f8 94       	cli
 270:	de bf       	out	0x3e, r29	; 62
 272:	0f be       	out	0x3f, r0	; 63
 274:	cd bf       	out	0x3d, r28	; 61
 276:	cf 91       	pop	r28
 278:	df 91       	pop	r29
 27a:	08 95       	ret

0000027c <DIO_voidSetPinValue>:

void DIO_voidSetPinValue(u8 Copy_u8PortID,u8 Copy_u8PinID,u8 Copy_u8PinValue){
 27c:	df 93       	push	r29
 27e:	cf 93       	push	r28
 280:	cd b7       	in	r28, 0x3d	; 61
 282:	de b7       	in	r29, 0x3e	; 62
 284:	27 97       	sbiw	r28, 0x07	; 7
 286:	0f b6       	in	r0, 0x3f	; 63
 288:	f8 94       	cli
 28a:	de bf       	out	0x3e, r29	; 62
 28c:	0f be       	out	0x3f, r0	; 63
 28e:	cd bf       	out	0x3d, r28	; 61
 290:	89 83       	std	Y+1, r24	; 0x01
 292:	6a 83       	std	Y+2, r22	; 0x02
 294:	4b 83       	std	Y+3, r20	; 0x03
	if(Copy_u8PinValue==PIN_HIGH){      //high
 296:	8b 81       	ldd	r24, Y+3	; 0x03
 298:	81 30       	cpi	r24, 0x01	; 1
 29a:	09 f0       	breq	.+2      	; 0x29e <DIO_voidSetPinValue+0x22>
 29c:	6f c0       	rjmp	.+222    	; 0x37c <DIO_voidSetPinValue+0x100>
		switch(Copy_u8PortID){
 29e:	89 81       	ldd	r24, Y+1	; 0x01
 2a0:	28 2f       	mov	r18, r24
 2a2:	30 e0       	ldi	r19, 0x00	; 0
 2a4:	3f 83       	std	Y+7, r19	; 0x07
 2a6:	2e 83       	std	Y+6, r18	; 0x06
 2a8:	8e 81       	ldd	r24, Y+6	; 0x06
 2aa:	9f 81       	ldd	r25, Y+7	; 0x07
 2ac:	81 30       	cpi	r24, 0x01	; 1
 2ae:	91 05       	cpc	r25, r1
 2b0:	49 f1       	breq	.+82     	; 0x304 <DIO_voidSetPinValue+0x88>
 2b2:	2e 81       	ldd	r18, Y+6	; 0x06
 2b4:	3f 81       	ldd	r19, Y+7	; 0x07
 2b6:	22 30       	cpi	r18, 0x02	; 2
 2b8:	31 05       	cpc	r19, r1
 2ba:	2c f4       	brge	.+10     	; 0x2c6 <DIO_voidSetPinValue+0x4a>
 2bc:	8e 81       	ldd	r24, Y+6	; 0x06
 2be:	9f 81       	ldd	r25, Y+7	; 0x07
 2c0:	00 97       	sbiw	r24, 0x00	; 0
 2c2:	61 f0       	breq	.+24     	; 0x2dc <DIO_voidSetPinValue+0x60>
 2c4:	d2 c0       	rjmp	.+420    	; 0x46a <DIO_voidSetPinValue+0x1ee>
 2c6:	2e 81       	ldd	r18, Y+6	; 0x06
 2c8:	3f 81       	ldd	r19, Y+7	; 0x07
 2ca:	22 30       	cpi	r18, 0x02	; 2
 2cc:	31 05       	cpc	r19, r1
 2ce:	71 f1       	breq	.+92     	; 0x32c <DIO_voidSetPinValue+0xb0>
 2d0:	8e 81       	ldd	r24, Y+6	; 0x06
 2d2:	9f 81       	ldd	r25, Y+7	; 0x07
 2d4:	83 30       	cpi	r24, 0x03	; 3
 2d6:	91 05       	cpc	r25, r1
 2d8:	e9 f1       	breq	.+122    	; 0x354 <DIO_voidSetPinValue+0xd8>
 2da:	c7 c0       	rjmp	.+398    	; 0x46a <DIO_voidSetPinValue+0x1ee>
			case PORTA/*Port A*/: SetBit(PORTA_REG,Copy_u8PinID);break;
 2dc:	ab e3       	ldi	r26, 0x3B	; 59
 2de:	b0 e0       	ldi	r27, 0x00	; 0
 2e0:	eb e3       	ldi	r30, 0x3B	; 59
 2e2:	f0 e0       	ldi	r31, 0x00	; 0
 2e4:	80 81       	ld	r24, Z
 2e6:	48 2f       	mov	r20, r24
 2e8:	8a 81       	ldd	r24, Y+2	; 0x02
 2ea:	28 2f       	mov	r18, r24
 2ec:	30 e0       	ldi	r19, 0x00	; 0
 2ee:	81 e0       	ldi	r24, 0x01	; 1
 2f0:	90 e0       	ldi	r25, 0x00	; 0
 2f2:	02 2e       	mov	r0, r18
 2f4:	02 c0       	rjmp	.+4      	; 0x2fa <DIO_voidSetPinValue+0x7e>
 2f6:	88 0f       	add	r24, r24
 2f8:	99 1f       	adc	r25, r25
 2fa:	0a 94       	dec	r0
 2fc:	e2 f7       	brpl	.-8      	; 0x2f6 <DIO_voidSetPinValue+0x7a>
 2fe:	84 2b       	or	r24, r20
 300:	8c 93       	st	X, r24
 302:	b3 c0       	rjmp	.+358    	; 0x46a <DIO_voidSetPinValue+0x1ee>
			case PORTB/*Port B*/: SetBit(PORTB_REG,Copy_u8PinID);break;
 304:	a8 e3       	ldi	r26, 0x38	; 56
 306:	b0 e0       	ldi	r27, 0x00	; 0
 308:	e8 e3       	ldi	r30, 0x38	; 56
 30a:	f0 e0       	ldi	r31, 0x00	; 0
 30c:	80 81       	ld	r24, Z
 30e:	48 2f       	mov	r20, r24
 310:	8a 81       	ldd	r24, Y+2	; 0x02
 312:	28 2f       	mov	r18, r24
 314:	30 e0       	ldi	r19, 0x00	; 0
 316:	81 e0       	ldi	r24, 0x01	; 1
 318:	90 e0       	ldi	r25, 0x00	; 0
 31a:	02 2e       	mov	r0, r18
 31c:	02 c0       	rjmp	.+4      	; 0x322 <DIO_voidSetPinValue+0xa6>
 31e:	88 0f       	add	r24, r24
 320:	99 1f       	adc	r25, r25
 322:	0a 94       	dec	r0
 324:	e2 f7       	brpl	.-8      	; 0x31e <DIO_voidSetPinValue+0xa2>
 326:	84 2b       	or	r24, r20
 328:	8c 93       	st	X, r24
 32a:	9f c0       	rjmp	.+318    	; 0x46a <DIO_voidSetPinValue+0x1ee>
			case PORTC/*Port C*/: SetBit(PORTC_REG,Copy_u8PinID);break;
 32c:	a5 e3       	ldi	r26, 0x35	; 53
 32e:	b0 e0       	ldi	r27, 0x00	; 0
 330:	e5 e3       	ldi	r30, 0x35	; 53
 332:	f0 e0       	ldi	r31, 0x00	; 0
 334:	80 81       	ld	r24, Z
 336:	48 2f       	mov	r20, r24
 338:	8a 81       	ldd	r24, Y+2	; 0x02
 33a:	28 2f       	mov	r18, r24
 33c:	30 e0       	ldi	r19, 0x00	; 0
 33e:	81 e0       	ldi	r24, 0x01	; 1
 340:	90 e0       	ldi	r25, 0x00	; 0
 342:	02 2e       	mov	r0, r18
 344:	02 c0       	rjmp	.+4      	; 0x34a <DIO_voidSetPinValue+0xce>
 346:	88 0f       	add	r24, r24
 348:	99 1f       	adc	r25, r25
 34a:	0a 94       	dec	r0
 34c:	e2 f7       	brpl	.-8      	; 0x346 <DIO_voidSetPinValue+0xca>
 34e:	84 2b       	or	r24, r20
 350:	8c 93       	st	X, r24
 352:	8b c0       	rjmp	.+278    	; 0x46a <DIO_voidSetPinValue+0x1ee>
			case PORTD/*Port D*/: SetBit(PORTD_REG,Copy_u8PinID);break;
 354:	a2 e3       	ldi	r26, 0x32	; 50
 356:	b0 e0       	ldi	r27, 0x00	; 0
 358:	e2 e3       	ldi	r30, 0x32	; 50
 35a:	f0 e0       	ldi	r31, 0x00	; 0
 35c:	80 81       	ld	r24, Z
 35e:	48 2f       	mov	r20, r24
 360:	8a 81       	ldd	r24, Y+2	; 0x02
 362:	28 2f       	mov	r18, r24
 364:	30 e0       	ldi	r19, 0x00	; 0
 366:	81 e0       	ldi	r24, 0x01	; 1
 368:	90 e0       	ldi	r25, 0x00	; 0
 36a:	02 2e       	mov	r0, r18
 36c:	02 c0       	rjmp	.+4      	; 0x372 <DIO_voidSetPinValue+0xf6>
 36e:	88 0f       	add	r24, r24
 370:	99 1f       	adc	r25, r25
 372:	0a 94       	dec	r0
 374:	e2 f7       	brpl	.-8      	; 0x36e <DIO_voidSetPinValue+0xf2>
 376:	84 2b       	or	r24, r20
 378:	8c 93       	st	X, r24
 37a:	77 c0       	rjmp	.+238    	; 0x46a <DIO_voidSetPinValue+0x1ee>
		}
	}
	else if(Copy_u8PinValue==PIN_LOW){  //low
 37c:	8b 81       	ldd	r24, Y+3	; 0x03
 37e:	88 23       	and	r24, r24
 380:	09 f0       	breq	.+2      	; 0x384 <DIO_voidSetPinValue+0x108>
 382:	73 c0       	rjmp	.+230    	; 0x46a <DIO_voidSetPinValue+0x1ee>
		switch(Copy_u8PortID){
 384:	89 81       	ldd	r24, Y+1	; 0x01
 386:	28 2f       	mov	r18, r24
 388:	30 e0       	ldi	r19, 0x00	; 0
 38a:	3d 83       	std	Y+5, r19	; 0x05
 38c:	2c 83       	std	Y+4, r18	; 0x04
 38e:	8c 81       	ldd	r24, Y+4	; 0x04
 390:	9d 81       	ldd	r25, Y+5	; 0x05
 392:	81 30       	cpi	r24, 0x01	; 1
 394:	91 05       	cpc	r25, r1
 396:	59 f1       	breq	.+86     	; 0x3ee <DIO_voidSetPinValue+0x172>
 398:	2c 81       	ldd	r18, Y+4	; 0x04
 39a:	3d 81       	ldd	r19, Y+5	; 0x05
 39c:	22 30       	cpi	r18, 0x02	; 2
 39e:	31 05       	cpc	r19, r1
 3a0:	2c f4       	brge	.+10     	; 0x3ac <DIO_voidSetPinValue+0x130>
 3a2:	8c 81       	ldd	r24, Y+4	; 0x04
 3a4:	9d 81       	ldd	r25, Y+5	; 0x05
 3a6:	00 97       	sbiw	r24, 0x00	; 0
 3a8:	69 f0       	breq	.+26     	; 0x3c4 <DIO_voidSetPinValue+0x148>
 3aa:	5f c0       	rjmp	.+190    	; 0x46a <DIO_voidSetPinValue+0x1ee>
 3ac:	2c 81       	ldd	r18, Y+4	; 0x04
 3ae:	3d 81       	ldd	r19, Y+5	; 0x05
 3b0:	22 30       	cpi	r18, 0x02	; 2
 3b2:	31 05       	cpc	r19, r1
 3b4:	89 f1       	breq	.+98     	; 0x418 <DIO_voidSetPinValue+0x19c>
 3b6:	8c 81       	ldd	r24, Y+4	; 0x04
 3b8:	9d 81       	ldd	r25, Y+5	; 0x05
 3ba:	83 30       	cpi	r24, 0x03	; 3
 3bc:	91 05       	cpc	r25, r1
 3be:	09 f4       	brne	.+2      	; 0x3c2 <DIO_voidSetPinValue+0x146>
 3c0:	40 c0       	rjmp	.+128    	; 0x442 <DIO_voidSetPinValue+0x1c6>
 3c2:	53 c0       	rjmp	.+166    	; 0x46a <DIO_voidSetPinValue+0x1ee>
			case PORTA/*Port A*/: ClrBit(PORTA_REG,Copy_u8PinID);break;
 3c4:	ab e3       	ldi	r26, 0x3B	; 59
 3c6:	b0 e0       	ldi	r27, 0x00	; 0
 3c8:	eb e3       	ldi	r30, 0x3B	; 59
 3ca:	f0 e0       	ldi	r31, 0x00	; 0
 3cc:	80 81       	ld	r24, Z
 3ce:	48 2f       	mov	r20, r24
 3d0:	8a 81       	ldd	r24, Y+2	; 0x02
 3d2:	28 2f       	mov	r18, r24
 3d4:	30 e0       	ldi	r19, 0x00	; 0
 3d6:	81 e0       	ldi	r24, 0x01	; 1
 3d8:	90 e0       	ldi	r25, 0x00	; 0
 3da:	02 2e       	mov	r0, r18
 3dc:	02 c0       	rjmp	.+4      	; 0x3e2 <DIO_voidSetPinValue+0x166>
 3de:	88 0f       	add	r24, r24
 3e0:	99 1f       	adc	r25, r25
 3e2:	0a 94       	dec	r0
 3e4:	e2 f7       	brpl	.-8      	; 0x3de <DIO_voidSetPinValue+0x162>
 3e6:	80 95       	com	r24
 3e8:	84 23       	and	r24, r20
 3ea:	8c 93       	st	X, r24
 3ec:	3e c0       	rjmp	.+124    	; 0x46a <DIO_voidSetPinValue+0x1ee>
			case PORTB/*Port B*/: ClrBit(PORTB_REG,Copy_u8PinID);break;
 3ee:	a8 e3       	ldi	r26, 0x38	; 56
 3f0:	b0 e0       	ldi	r27, 0x00	; 0
 3f2:	e8 e3       	ldi	r30, 0x38	; 56
 3f4:	f0 e0       	ldi	r31, 0x00	; 0
 3f6:	80 81       	ld	r24, Z
 3f8:	48 2f       	mov	r20, r24
 3fa:	8a 81       	ldd	r24, Y+2	; 0x02
 3fc:	28 2f       	mov	r18, r24
 3fe:	30 e0       	ldi	r19, 0x00	; 0
 400:	81 e0       	ldi	r24, 0x01	; 1
 402:	90 e0       	ldi	r25, 0x00	; 0
 404:	02 2e       	mov	r0, r18
 406:	02 c0       	rjmp	.+4      	; 0x40c <DIO_voidSetPinValue+0x190>
 408:	88 0f       	add	r24, r24
 40a:	99 1f       	adc	r25, r25
 40c:	0a 94       	dec	r0
 40e:	e2 f7       	brpl	.-8      	; 0x408 <DIO_voidSetPinValue+0x18c>
 410:	80 95       	com	r24
 412:	84 23       	and	r24, r20
 414:	8c 93       	st	X, r24
 416:	29 c0       	rjmp	.+82     	; 0x46a <DIO_voidSetPinValue+0x1ee>
			case PORTC/*Port C*/: ClrBit(PORTC_REG,Copy_u8PinID);break;
 418:	a5 e3       	ldi	r26, 0x35	; 53
 41a:	b0 e0       	ldi	r27, 0x00	; 0
 41c:	e5 e3       	ldi	r30, 0x35	; 53
 41e:	f0 e0       	ldi	r31, 0x00	; 0
 420:	80 81       	ld	r24, Z
 422:	48 2f       	mov	r20, r24
 424:	8a 81       	ldd	r24, Y+2	; 0x02
 426:	28 2f       	mov	r18, r24
 428:	30 e0       	ldi	r19, 0x00	; 0
 42a:	81 e0       	ldi	r24, 0x01	; 1
 42c:	90 e0       	ldi	r25, 0x00	; 0
 42e:	02 2e       	mov	r0, r18
 430:	02 c0       	rjmp	.+4      	; 0x436 <DIO_voidSetPinValue+0x1ba>
 432:	88 0f       	add	r24, r24
 434:	99 1f       	adc	r25, r25
 436:	0a 94       	dec	r0
 438:	e2 f7       	brpl	.-8      	; 0x432 <DIO_voidSetPinValue+0x1b6>
 43a:	80 95       	com	r24
 43c:	84 23       	and	r24, r20
 43e:	8c 93       	st	X, r24
 440:	14 c0       	rjmp	.+40     	; 0x46a <DIO_voidSetPinValue+0x1ee>
			case PORTD/*Port D*/: ClrBit(PORTD_REG,Copy_u8PinID);break;
 442:	a2 e3       	ldi	r26, 0x32	; 50
 444:	b0 e0       	ldi	r27, 0x00	; 0
 446:	e2 e3       	ldi	r30, 0x32	; 50
 448:	f0 e0       	ldi	r31, 0x00	; 0
 44a:	80 81       	ld	r24, Z
 44c:	48 2f       	mov	r20, r24
 44e:	8a 81       	ldd	r24, Y+2	; 0x02
 450:	28 2f       	mov	r18, r24
 452:	30 e0       	ldi	r19, 0x00	; 0
 454:	81 e0       	ldi	r24, 0x01	; 1
 456:	90 e0       	ldi	r25, 0x00	; 0
 458:	02 2e       	mov	r0, r18
 45a:	02 c0       	rjmp	.+4      	; 0x460 <DIO_voidSetPinValue+0x1e4>
 45c:	88 0f       	add	r24, r24
 45e:	99 1f       	adc	r25, r25
 460:	0a 94       	dec	r0
 462:	e2 f7       	brpl	.-8      	; 0x45c <DIO_voidSetPinValue+0x1e0>
 464:	80 95       	com	r24
 466:	84 23       	and	r24, r20
 468:	8c 93       	st	X, r24
		}
	}	
}
 46a:	27 96       	adiw	r28, 0x07	; 7
 46c:	0f b6       	in	r0, 0x3f	; 63
 46e:	f8 94       	cli
 470:	de bf       	out	0x3e, r29	; 62
 472:	0f be       	out	0x3f, r0	; 63
 474:	cd bf       	out	0x3d, r28	; 61
 476:	cf 91       	pop	r28
 478:	df 91       	pop	r29
 47a:	08 95       	ret

0000047c <DIO_voidSetPortDirection>:

void DIO_voidSetPortDirection(u8 Copy_u8PortID,u8 Copy_u8PortDir){
 47c:	df 93       	push	r29
 47e:	cf 93       	push	r28
 480:	00 d0       	rcall	.+0      	; 0x482 <DIO_voidSetPortDirection+0x6>
 482:	00 d0       	rcall	.+0      	; 0x484 <DIO_voidSetPortDirection+0x8>
 484:	cd b7       	in	r28, 0x3d	; 61
 486:	de b7       	in	r29, 0x3e	; 62
 488:	89 83       	std	Y+1, r24	; 0x01
 48a:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8PortID){
 48c:	89 81       	ldd	r24, Y+1	; 0x01
 48e:	28 2f       	mov	r18, r24
 490:	30 e0       	ldi	r19, 0x00	; 0
 492:	3c 83       	std	Y+4, r19	; 0x04
 494:	2b 83       	std	Y+3, r18	; 0x03
 496:	8b 81       	ldd	r24, Y+3	; 0x03
 498:	9c 81       	ldd	r25, Y+4	; 0x04
 49a:	81 30       	cpi	r24, 0x01	; 1
 49c:	91 05       	cpc	r25, r1
 49e:	d1 f0       	breq	.+52     	; 0x4d4 <DIO_voidSetPortDirection+0x58>
 4a0:	2b 81       	ldd	r18, Y+3	; 0x03
 4a2:	3c 81       	ldd	r19, Y+4	; 0x04
 4a4:	22 30       	cpi	r18, 0x02	; 2
 4a6:	31 05       	cpc	r19, r1
 4a8:	2c f4       	brge	.+10     	; 0x4b4 <DIO_voidSetPortDirection+0x38>
 4aa:	8b 81       	ldd	r24, Y+3	; 0x03
 4ac:	9c 81       	ldd	r25, Y+4	; 0x04
 4ae:	00 97       	sbiw	r24, 0x00	; 0
 4b0:	61 f0       	breq	.+24     	; 0x4ca <DIO_voidSetPortDirection+0x4e>
 4b2:	1e c0       	rjmp	.+60     	; 0x4f0 <DIO_voidSetPortDirection+0x74>
 4b4:	2b 81       	ldd	r18, Y+3	; 0x03
 4b6:	3c 81       	ldd	r19, Y+4	; 0x04
 4b8:	22 30       	cpi	r18, 0x02	; 2
 4ba:	31 05       	cpc	r19, r1
 4bc:	81 f0       	breq	.+32     	; 0x4de <DIO_voidSetPortDirection+0x62>
 4be:	8b 81       	ldd	r24, Y+3	; 0x03
 4c0:	9c 81       	ldd	r25, Y+4	; 0x04
 4c2:	83 30       	cpi	r24, 0x03	; 3
 4c4:	91 05       	cpc	r25, r1
 4c6:	81 f0       	breq	.+32     	; 0x4e8 <DIO_voidSetPortDirection+0x6c>
 4c8:	13 c0       	rjmp	.+38     	; 0x4f0 <DIO_voidSetPortDirection+0x74>
		case PORTA/*Port A*/: DDRA_REG=Copy_u8PortDir;break;
 4ca:	ea e3       	ldi	r30, 0x3A	; 58
 4cc:	f0 e0       	ldi	r31, 0x00	; 0
 4ce:	8a 81       	ldd	r24, Y+2	; 0x02
 4d0:	80 83       	st	Z, r24
 4d2:	0e c0       	rjmp	.+28     	; 0x4f0 <DIO_voidSetPortDirection+0x74>
		case PORTB/*Port B*/: DDRB_REG=Copy_u8PortDir;break;
 4d4:	e7 e3       	ldi	r30, 0x37	; 55
 4d6:	f0 e0       	ldi	r31, 0x00	; 0
 4d8:	8a 81       	ldd	r24, Y+2	; 0x02
 4da:	80 83       	st	Z, r24
 4dc:	09 c0       	rjmp	.+18     	; 0x4f0 <DIO_voidSetPortDirection+0x74>
		case PORTC/*Port C*/: DDRC_REG=Copy_u8PortDir;break;
 4de:	e4 e3       	ldi	r30, 0x34	; 52
 4e0:	f0 e0       	ldi	r31, 0x00	; 0
 4e2:	8a 81       	ldd	r24, Y+2	; 0x02
 4e4:	80 83       	st	Z, r24
 4e6:	04 c0       	rjmp	.+8      	; 0x4f0 <DIO_voidSetPortDirection+0x74>
		case PORTD/*Port D*/: DDRD_REG=Copy_u8PortDir;break;
 4e8:	e1 e3       	ldi	r30, 0x31	; 49
 4ea:	f0 e0       	ldi	r31, 0x00	; 0
 4ec:	8a 81       	ldd	r24, Y+2	; 0x02
 4ee:	80 83       	st	Z, r24
	}
}
 4f0:	0f 90       	pop	r0
 4f2:	0f 90       	pop	r0
 4f4:	0f 90       	pop	r0
 4f6:	0f 90       	pop	r0
 4f8:	cf 91       	pop	r28
 4fa:	df 91       	pop	r29
 4fc:	08 95       	ret

000004fe <DIO_voidSetAllPortInput>:

void DIO_voidSetAllPortInput(u8 Copy_u8PortID){
 4fe:	df 93       	push	r29
 500:	cf 93       	push	r28
 502:	00 d0       	rcall	.+0      	; 0x504 <DIO_voidSetAllPortInput+0x6>
 504:	0f 92       	push	r0
 506:	cd b7       	in	r28, 0x3d	; 61
 508:	de b7       	in	r29, 0x3e	; 62
 50a:	89 83       	std	Y+1, r24	; 0x01
	switch(Copy_u8PortID){
 50c:	89 81       	ldd	r24, Y+1	; 0x01
 50e:	28 2f       	mov	r18, r24
 510:	30 e0       	ldi	r19, 0x00	; 0
 512:	3b 83       	std	Y+3, r19	; 0x03
 514:	2a 83       	std	Y+2, r18	; 0x02
 516:	8a 81       	ldd	r24, Y+2	; 0x02
 518:	9b 81       	ldd	r25, Y+3	; 0x03
 51a:	81 30       	cpi	r24, 0x01	; 1
 51c:	91 05       	cpc	r25, r1
 51e:	c9 f0       	breq	.+50     	; 0x552 <DIO_voidSetAllPortInput+0x54>
 520:	2a 81       	ldd	r18, Y+2	; 0x02
 522:	3b 81       	ldd	r19, Y+3	; 0x03
 524:	22 30       	cpi	r18, 0x02	; 2
 526:	31 05       	cpc	r19, r1
 528:	2c f4       	brge	.+10     	; 0x534 <DIO_voidSetAllPortInput+0x36>
 52a:	8a 81       	ldd	r24, Y+2	; 0x02
 52c:	9b 81       	ldd	r25, Y+3	; 0x03
 52e:	00 97       	sbiw	r24, 0x00	; 0
 530:	61 f0       	breq	.+24     	; 0x54a <DIO_voidSetAllPortInput+0x4c>
 532:	1a c0       	rjmp	.+52     	; 0x568 <DIO_voidSetAllPortInput+0x6a>
 534:	2a 81       	ldd	r18, Y+2	; 0x02
 536:	3b 81       	ldd	r19, Y+3	; 0x03
 538:	22 30       	cpi	r18, 0x02	; 2
 53a:	31 05       	cpc	r19, r1
 53c:	71 f0       	breq	.+28     	; 0x55a <DIO_voidSetAllPortInput+0x5c>
 53e:	8a 81       	ldd	r24, Y+2	; 0x02
 540:	9b 81       	ldd	r25, Y+3	; 0x03
 542:	83 30       	cpi	r24, 0x03	; 3
 544:	91 05       	cpc	r25, r1
 546:	69 f0       	breq	.+26     	; 0x562 <DIO_voidSetAllPortInput+0x64>
 548:	0f c0       	rjmp	.+30     	; 0x568 <DIO_voidSetAllPortInput+0x6a>
		case PORTA/*Port A*/: DDRA_REG=PORT_INPUT;break;
 54a:	ea e3       	ldi	r30, 0x3A	; 58
 54c:	f0 e0       	ldi	r31, 0x00	; 0
 54e:	10 82       	st	Z, r1
 550:	0b c0       	rjmp	.+22     	; 0x568 <DIO_voidSetAllPortInput+0x6a>
		case PORTB/*Port B*/: DDRB_REG=PORT_INPUT;break;
 552:	e7 e3       	ldi	r30, 0x37	; 55
 554:	f0 e0       	ldi	r31, 0x00	; 0
 556:	10 82       	st	Z, r1
 558:	07 c0       	rjmp	.+14     	; 0x568 <DIO_voidSetAllPortInput+0x6a>
		case PORTC/*Port C*/: DDRC_REG=PORT_INPUT;break;
 55a:	e4 e3       	ldi	r30, 0x34	; 52
 55c:	f0 e0       	ldi	r31, 0x00	; 0
 55e:	10 82       	st	Z, r1
 560:	03 c0       	rjmp	.+6      	; 0x568 <DIO_voidSetAllPortInput+0x6a>
		case PORTD/*Port D*/: DDRD_REG=PORT_INPUT;break;
 562:	e1 e3       	ldi	r30, 0x31	; 49
 564:	f0 e0       	ldi	r31, 0x00	; 0
 566:	10 82       	st	Z, r1
	}
}
 568:	0f 90       	pop	r0
 56a:	0f 90       	pop	r0
 56c:	0f 90       	pop	r0
 56e:	cf 91       	pop	r28
 570:	df 91       	pop	r29
 572:	08 95       	ret

00000574 <DIO_voidSetAllPortOutput>:

void DIO_voidSetAllPortOutput(u8 Copy_u8PortID){
 574:	df 93       	push	r29
 576:	cf 93       	push	r28
 578:	00 d0       	rcall	.+0      	; 0x57a <DIO_voidSetAllPortOutput+0x6>
 57a:	0f 92       	push	r0
 57c:	cd b7       	in	r28, 0x3d	; 61
 57e:	de b7       	in	r29, 0x3e	; 62
 580:	89 83       	std	Y+1, r24	; 0x01
	switch(Copy_u8PortID){
 582:	89 81       	ldd	r24, Y+1	; 0x01
 584:	28 2f       	mov	r18, r24
 586:	30 e0       	ldi	r19, 0x00	; 0
 588:	3b 83       	std	Y+3, r19	; 0x03
 58a:	2a 83       	std	Y+2, r18	; 0x02
 58c:	8a 81       	ldd	r24, Y+2	; 0x02
 58e:	9b 81       	ldd	r25, Y+3	; 0x03
 590:	81 30       	cpi	r24, 0x01	; 1
 592:	91 05       	cpc	r25, r1
 594:	d1 f0       	breq	.+52     	; 0x5ca <DIO_voidSetAllPortOutput+0x56>
 596:	2a 81       	ldd	r18, Y+2	; 0x02
 598:	3b 81       	ldd	r19, Y+3	; 0x03
 59a:	22 30       	cpi	r18, 0x02	; 2
 59c:	31 05       	cpc	r19, r1
 59e:	2c f4       	brge	.+10     	; 0x5aa <DIO_voidSetAllPortOutput+0x36>
 5a0:	8a 81       	ldd	r24, Y+2	; 0x02
 5a2:	9b 81       	ldd	r25, Y+3	; 0x03
 5a4:	00 97       	sbiw	r24, 0x00	; 0
 5a6:	61 f0       	breq	.+24     	; 0x5c0 <DIO_voidSetAllPortOutput+0x4c>
 5a8:	1e c0       	rjmp	.+60     	; 0x5e6 <DIO_voidSetAllPortOutput+0x72>
 5aa:	2a 81       	ldd	r18, Y+2	; 0x02
 5ac:	3b 81       	ldd	r19, Y+3	; 0x03
 5ae:	22 30       	cpi	r18, 0x02	; 2
 5b0:	31 05       	cpc	r19, r1
 5b2:	81 f0       	breq	.+32     	; 0x5d4 <DIO_voidSetAllPortOutput+0x60>
 5b4:	8a 81       	ldd	r24, Y+2	; 0x02
 5b6:	9b 81       	ldd	r25, Y+3	; 0x03
 5b8:	83 30       	cpi	r24, 0x03	; 3
 5ba:	91 05       	cpc	r25, r1
 5bc:	81 f0       	breq	.+32     	; 0x5de <DIO_voidSetAllPortOutput+0x6a>
 5be:	13 c0       	rjmp	.+38     	; 0x5e6 <DIO_voidSetAllPortOutput+0x72>
		case PORTA/*Port A*/: DDRA_REG=PORT_OUTPUT;break;
 5c0:	ea e3       	ldi	r30, 0x3A	; 58
 5c2:	f0 e0       	ldi	r31, 0x00	; 0
 5c4:	8f ef       	ldi	r24, 0xFF	; 255
 5c6:	80 83       	st	Z, r24
 5c8:	0e c0       	rjmp	.+28     	; 0x5e6 <DIO_voidSetAllPortOutput+0x72>
		case PORTB/*Port B*/: DDRB_REG=PORT_OUTPUT;break;
 5ca:	e7 e3       	ldi	r30, 0x37	; 55
 5cc:	f0 e0       	ldi	r31, 0x00	; 0
 5ce:	8f ef       	ldi	r24, 0xFF	; 255
 5d0:	80 83       	st	Z, r24
 5d2:	09 c0       	rjmp	.+18     	; 0x5e6 <DIO_voidSetAllPortOutput+0x72>
		case PORTC/*Port C*/: DDRC_REG=PORT_OUTPUT;break;
 5d4:	e4 e3       	ldi	r30, 0x34	; 52
 5d6:	f0 e0       	ldi	r31, 0x00	; 0
 5d8:	8f ef       	ldi	r24, 0xFF	; 255
 5da:	80 83       	st	Z, r24
 5dc:	04 c0       	rjmp	.+8      	; 0x5e6 <DIO_voidSetAllPortOutput+0x72>
		case PORTD/*Port D*/: DDRD_REG=PORT_OUTPUT;break;
 5de:	e1 e3       	ldi	r30, 0x31	; 49
 5e0:	f0 e0       	ldi	r31, 0x00	; 0
 5e2:	8f ef       	ldi	r24, 0xFF	; 255
 5e4:	80 83       	st	Z, r24
	}
}
 5e6:	0f 90       	pop	r0
 5e8:	0f 90       	pop	r0
 5ea:	0f 90       	pop	r0
 5ec:	cf 91       	pop	r28
 5ee:	df 91       	pop	r29
 5f0:	08 95       	ret

000005f2 <DIO_voidSetPortValue>:

void DIO_voidSetPortValue(u8 Copy_u8PortID,u8 Copy_u8PortValue){
 5f2:	df 93       	push	r29
 5f4:	cf 93       	push	r28
 5f6:	00 d0       	rcall	.+0      	; 0x5f8 <DIO_voidSetPortValue+0x6>
 5f8:	00 d0       	rcall	.+0      	; 0x5fa <DIO_voidSetPortValue+0x8>
 5fa:	cd b7       	in	r28, 0x3d	; 61
 5fc:	de b7       	in	r29, 0x3e	; 62
 5fe:	89 83       	std	Y+1, r24	; 0x01
 600:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8PortID){
 602:	89 81       	ldd	r24, Y+1	; 0x01
 604:	28 2f       	mov	r18, r24
 606:	30 e0       	ldi	r19, 0x00	; 0
 608:	3c 83       	std	Y+4, r19	; 0x04
 60a:	2b 83       	std	Y+3, r18	; 0x03
 60c:	8b 81       	ldd	r24, Y+3	; 0x03
 60e:	9c 81       	ldd	r25, Y+4	; 0x04
 610:	81 30       	cpi	r24, 0x01	; 1
 612:	91 05       	cpc	r25, r1
 614:	d1 f0       	breq	.+52     	; 0x64a <DIO_voidSetPortValue+0x58>
 616:	2b 81       	ldd	r18, Y+3	; 0x03
 618:	3c 81       	ldd	r19, Y+4	; 0x04
 61a:	22 30       	cpi	r18, 0x02	; 2
 61c:	31 05       	cpc	r19, r1
 61e:	2c f4       	brge	.+10     	; 0x62a <DIO_voidSetPortValue+0x38>
 620:	8b 81       	ldd	r24, Y+3	; 0x03
 622:	9c 81       	ldd	r25, Y+4	; 0x04
 624:	00 97       	sbiw	r24, 0x00	; 0
 626:	61 f0       	breq	.+24     	; 0x640 <DIO_voidSetPortValue+0x4e>
 628:	1e c0       	rjmp	.+60     	; 0x666 <DIO_voidSetPortValue+0x74>
 62a:	2b 81       	ldd	r18, Y+3	; 0x03
 62c:	3c 81       	ldd	r19, Y+4	; 0x04
 62e:	22 30       	cpi	r18, 0x02	; 2
 630:	31 05       	cpc	r19, r1
 632:	81 f0       	breq	.+32     	; 0x654 <DIO_voidSetPortValue+0x62>
 634:	8b 81       	ldd	r24, Y+3	; 0x03
 636:	9c 81       	ldd	r25, Y+4	; 0x04
 638:	83 30       	cpi	r24, 0x03	; 3
 63a:	91 05       	cpc	r25, r1
 63c:	81 f0       	breq	.+32     	; 0x65e <DIO_voidSetPortValue+0x6c>
 63e:	13 c0       	rjmp	.+38     	; 0x666 <DIO_voidSetPortValue+0x74>
		case PORTA/*Port A*/: PORTA_REG=Copy_u8PortValue;break;
 640:	eb e3       	ldi	r30, 0x3B	; 59
 642:	f0 e0       	ldi	r31, 0x00	; 0
 644:	8a 81       	ldd	r24, Y+2	; 0x02
 646:	80 83       	st	Z, r24
 648:	0e c0       	rjmp	.+28     	; 0x666 <DIO_voidSetPortValue+0x74>
		case PORTB/*Port B*/: PORTB_REG=Copy_u8PortValue;break;
 64a:	e8 e3       	ldi	r30, 0x38	; 56
 64c:	f0 e0       	ldi	r31, 0x00	; 0
 64e:	8a 81       	ldd	r24, Y+2	; 0x02
 650:	80 83       	st	Z, r24
 652:	09 c0       	rjmp	.+18     	; 0x666 <DIO_voidSetPortValue+0x74>
		case PORTC/*Port C*/: PORTC_REG=Copy_u8PortValue;break;
 654:	e5 e3       	ldi	r30, 0x35	; 53
 656:	f0 e0       	ldi	r31, 0x00	; 0
 658:	8a 81       	ldd	r24, Y+2	; 0x02
 65a:	80 83       	st	Z, r24
 65c:	04 c0       	rjmp	.+8      	; 0x666 <DIO_voidSetPortValue+0x74>
		case PORTD/*Port D*/: PORTD_REG=Copy_u8PortValue;break;
 65e:	e2 e3       	ldi	r30, 0x32	; 50
 660:	f0 e0       	ldi	r31, 0x00	; 0
 662:	8a 81       	ldd	r24, Y+2	; 0x02
 664:	80 83       	st	Z, r24
	}
}
 666:	0f 90       	pop	r0
 668:	0f 90       	pop	r0
 66a:	0f 90       	pop	r0
 66c:	0f 90       	pop	r0
 66e:	cf 91       	pop	r28
 670:	df 91       	pop	r29
 672:	08 95       	ret

00000674 <DIO_voidSetAllPortLow>:

void DIO_voidSetAllPortLow(u8 Copy_u8PortID){
 674:	df 93       	push	r29
 676:	cf 93       	push	r28
 678:	00 d0       	rcall	.+0      	; 0x67a <DIO_voidSetAllPortLow+0x6>
 67a:	0f 92       	push	r0
 67c:	cd b7       	in	r28, 0x3d	; 61
 67e:	de b7       	in	r29, 0x3e	; 62
 680:	89 83       	std	Y+1, r24	; 0x01
	switch(Copy_u8PortID){
 682:	89 81       	ldd	r24, Y+1	; 0x01
 684:	28 2f       	mov	r18, r24
 686:	30 e0       	ldi	r19, 0x00	; 0
 688:	3b 83       	std	Y+3, r19	; 0x03
 68a:	2a 83       	std	Y+2, r18	; 0x02
 68c:	8a 81       	ldd	r24, Y+2	; 0x02
 68e:	9b 81       	ldd	r25, Y+3	; 0x03
 690:	81 30       	cpi	r24, 0x01	; 1
 692:	91 05       	cpc	r25, r1
 694:	c9 f0       	breq	.+50     	; 0x6c8 <DIO_voidSetAllPortLow+0x54>
 696:	2a 81       	ldd	r18, Y+2	; 0x02
 698:	3b 81       	ldd	r19, Y+3	; 0x03
 69a:	22 30       	cpi	r18, 0x02	; 2
 69c:	31 05       	cpc	r19, r1
 69e:	2c f4       	brge	.+10     	; 0x6aa <DIO_voidSetAllPortLow+0x36>
 6a0:	8a 81       	ldd	r24, Y+2	; 0x02
 6a2:	9b 81       	ldd	r25, Y+3	; 0x03
 6a4:	00 97       	sbiw	r24, 0x00	; 0
 6a6:	61 f0       	breq	.+24     	; 0x6c0 <DIO_voidSetAllPortLow+0x4c>
 6a8:	1a c0       	rjmp	.+52     	; 0x6de <DIO_voidSetAllPortLow+0x6a>
 6aa:	2a 81       	ldd	r18, Y+2	; 0x02
 6ac:	3b 81       	ldd	r19, Y+3	; 0x03
 6ae:	22 30       	cpi	r18, 0x02	; 2
 6b0:	31 05       	cpc	r19, r1
 6b2:	71 f0       	breq	.+28     	; 0x6d0 <DIO_voidSetAllPortLow+0x5c>
 6b4:	8a 81       	ldd	r24, Y+2	; 0x02
 6b6:	9b 81       	ldd	r25, Y+3	; 0x03
 6b8:	83 30       	cpi	r24, 0x03	; 3
 6ba:	91 05       	cpc	r25, r1
 6bc:	69 f0       	breq	.+26     	; 0x6d8 <DIO_voidSetAllPortLow+0x64>
 6be:	0f c0       	rjmp	.+30     	; 0x6de <DIO_voidSetAllPortLow+0x6a>
		case PORTA/*Port A*/: PORTA_REG=PORT_LOW;break;
 6c0:	eb e3       	ldi	r30, 0x3B	; 59
 6c2:	f0 e0       	ldi	r31, 0x00	; 0
 6c4:	10 82       	st	Z, r1
 6c6:	0b c0       	rjmp	.+22     	; 0x6de <DIO_voidSetAllPortLow+0x6a>
		case PORTB/*Port B*/: PORTB_REG=PORT_LOW;break;
 6c8:	e8 e3       	ldi	r30, 0x38	; 56
 6ca:	f0 e0       	ldi	r31, 0x00	; 0
 6cc:	10 82       	st	Z, r1
 6ce:	07 c0       	rjmp	.+14     	; 0x6de <DIO_voidSetAllPortLow+0x6a>
		case PORTC/*Port C*/: PORTC_REG=PORT_LOW;break;
 6d0:	e5 e3       	ldi	r30, 0x35	; 53
 6d2:	f0 e0       	ldi	r31, 0x00	; 0
 6d4:	10 82       	st	Z, r1
 6d6:	03 c0       	rjmp	.+6      	; 0x6de <DIO_voidSetAllPortLow+0x6a>
		case PORTD/*Port D*/: PORTD_REG=PORT_LOW;break;
 6d8:	e2 e3       	ldi	r30, 0x32	; 50
 6da:	f0 e0       	ldi	r31, 0x00	; 0
 6dc:	10 82       	st	Z, r1
	}
}
 6de:	0f 90       	pop	r0
 6e0:	0f 90       	pop	r0
 6e2:	0f 90       	pop	r0
 6e4:	cf 91       	pop	r28
 6e6:	df 91       	pop	r29
 6e8:	08 95       	ret

000006ea <DIO_voidSetAllPortHigh>:

void DIO_voidSetAllPortHigh(u8 Copy_u8PortID){
 6ea:	df 93       	push	r29
 6ec:	cf 93       	push	r28
 6ee:	00 d0       	rcall	.+0      	; 0x6f0 <DIO_voidSetAllPortHigh+0x6>
 6f0:	0f 92       	push	r0
 6f2:	cd b7       	in	r28, 0x3d	; 61
 6f4:	de b7       	in	r29, 0x3e	; 62
 6f6:	89 83       	std	Y+1, r24	; 0x01
	switch(Copy_u8PortID){
 6f8:	89 81       	ldd	r24, Y+1	; 0x01
 6fa:	28 2f       	mov	r18, r24
 6fc:	30 e0       	ldi	r19, 0x00	; 0
 6fe:	3b 83       	std	Y+3, r19	; 0x03
 700:	2a 83       	std	Y+2, r18	; 0x02
 702:	8a 81       	ldd	r24, Y+2	; 0x02
 704:	9b 81       	ldd	r25, Y+3	; 0x03
 706:	81 30       	cpi	r24, 0x01	; 1
 708:	91 05       	cpc	r25, r1
 70a:	d1 f0       	breq	.+52     	; 0x740 <DIO_voidSetAllPortHigh+0x56>
 70c:	2a 81       	ldd	r18, Y+2	; 0x02
 70e:	3b 81       	ldd	r19, Y+3	; 0x03
 710:	22 30       	cpi	r18, 0x02	; 2
 712:	31 05       	cpc	r19, r1
 714:	2c f4       	brge	.+10     	; 0x720 <DIO_voidSetAllPortHigh+0x36>
 716:	8a 81       	ldd	r24, Y+2	; 0x02
 718:	9b 81       	ldd	r25, Y+3	; 0x03
 71a:	00 97       	sbiw	r24, 0x00	; 0
 71c:	61 f0       	breq	.+24     	; 0x736 <DIO_voidSetAllPortHigh+0x4c>
 71e:	1e c0       	rjmp	.+60     	; 0x75c <DIO_voidSetAllPortHigh+0x72>
 720:	2a 81       	ldd	r18, Y+2	; 0x02
 722:	3b 81       	ldd	r19, Y+3	; 0x03
 724:	22 30       	cpi	r18, 0x02	; 2
 726:	31 05       	cpc	r19, r1
 728:	81 f0       	breq	.+32     	; 0x74a <DIO_voidSetAllPortHigh+0x60>
 72a:	8a 81       	ldd	r24, Y+2	; 0x02
 72c:	9b 81       	ldd	r25, Y+3	; 0x03
 72e:	83 30       	cpi	r24, 0x03	; 3
 730:	91 05       	cpc	r25, r1
 732:	81 f0       	breq	.+32     	; 0x754 <DIO_voidSetAllPortHigh+0x6a>
 734:	13 c0       	rjmp	.+38     	; 0x75c <DIO_voidSetAllPortHigh+0x72>
		case PORTA/*Port A*/: PORTA_REG=PORT_HIGH;break;
 736:	eb e3       	ldi	r30, 0x3B	; 59
 738:	f0 e0       	ldi	r31, 0x00	; 0
 73a:	8f ef       	ldi	r24, 0xFF	; 255
 73c:	80 83       	st	Z, r24
 73e:	0e c0       	rjmp	.+28     	; 0x75c <DIO_voidSetAllPortHigh+0x72>
		case PORTB/*Port B*/: PORTB_REG=PORT_HIGH;break;
 740:	e8 e3       	ldi	r30, 0x38	; 56
 742:	f0 e0       	ldi	r31, 0x00	; 0
 744:	8f ef       	ldi	r24, 0xFF	; 255
 746:	80 83       	st	Z, r24
 748:	09 c0       	rjmp	.+18     	; 0x75c <DIO_voidSetAllPortHigh+0x72>
		case PORTC/*Port C*/: PORTC_REG=PORT_HIGH;break;
 74a:	e5 e3       	ldi	r30, 0x35	; 53
 74c:	f0 e0       	ldi	r31, 0x00	; 0
 74e:	8f ef       	ldi	r24, 0xFF	; 255
 750:	80 83       	st	Z, r24
 752:	04 c0       	rjmp	.+8      	; 0x75c <DIO_voidSetAllPortHigh+0x72>
		case PORTD/*Port D*/: PORTD_REG=PORT_HIGH;break;
 754:	e2 e3       	ldi	r30, 0x32	; 50
 756:	f0 e0       	ldi	r31, 0x00	; 0
 758:	8f ef       	ldi	r24, 0xFF	; 255
 75a:	80 83       	st	Z, r24
	}
}
 75c:	0f 90       	pop	r0
 75e:	0f 90       	pop	r0
 760:	0f 90       	pop	r0
 762:	cf 91       	pop	r28
 764:	df 91       	pop	r29
 766:	08 95       	ret

00000768 <DIO_u8GetPinValue>:

u8 DIO_u8GetPinValue(u8 Copy_u8PortID,u8 Copy_u8PinID){
 768:	df 93       	push	r29
 76a:	cf 93       	push	r28
 76c:	00 d0       	rcall	.+0      	; 0x76e <DIO_u8GetPinValue+0x6>
 76e:	00 d0       	rcall	.+0      	; 0x770 <DIO_u8GetPinValue+0x8>
 770:	0f 92       	push	r0
 772:	cd b7       	in	r28, 0x3d	; 61
 774:	de b7       	in	r29, 0x3e	; 62
 776:	8a 83       	std	Y+2, r24	; 0x02
 778:	6b 83       	std	Y+3, r22	; 0x03
	u8 value;
	switch(Copy_u8PortID){
 77a:	8a 81       	ldd	r24, Y+2	; 0x02
 77c:	28 2f       	mov	r18, r24
 77e:	30 e0       	ldi	r19, 0x00	; 0
 780:	3d 83       	std	Y+5, r19	; 0x05
 782:	2c 83       	std	Y+4, r18	; 0x04
 784:	4c 81       	ldd	r20, Y+4	; 0x04
 786:	5d 81       	ldd	r21, Y+5	; 0x05
 788:	41 30       	cpi	r20, 0x01	; 1
 78a:	51 05       	cpc	r21, r1
 78c:	41 f1       	breq	.+80     	; 0x7de <DIO_u8GetPinValue+0x76>
 78e:	8c 81       	ldd	r24, Y+4	; 0x04
 790:	9d 81       	ldd	r25, Y+5	; 0x05
 792:	82 30       	cpi	r24, 0x02	; 2
 794:	91 05       	cpc	r25, r1
 796:	34 f4       	brge	.+12     	; 0x7a4 <DIO_u8GetPinValue+0x3c>
 798:	2c 81       	ldd	r18, Y+4	; 0x04
 79a:	3d 81       	ldd	r19, Y+5	; 0x05
 79c:	21 15       	cp	r18, r1
 79e:	31 05       	cpc	r19, r1
 7a0:	61 f0       	breq	.+24     	; 0x7ba <DIO_u8GetPinValue+0x52>
 7a2:	52 c0       	rjmp	.+164    	; 0x848 <DIO_u8GetPinValue+0xe0>
 7a4:	4c 81       	ldd	r20, Y+4	; 0x04
 7a6:	5d 81       	ldd	r21, Y+5	; 0x05
 7a8:	42 30       	cpi	r20, 0x02	; 2
 7aa:	51 05       	cpc	r21, r1
 7ac:	51 f1       	breq	.+84     	; 0x802 <DIO_u8GetPinValue+0x9a>
 7ae:	8c 81       	ldd	r24, Y+4	; 0x04
 7b0:	9d 81       	ldd	r25, Y+5	; 0x05
 7b2:	83 30       	cpi	r24, 0x03	; 3
 7b4:	91 05       	cpc	r25, r1
 7b6:	b9 f1       	breq	.+110    	; 0x826 <DIO_u8GetPinValue+0xbe>
 7b8:	47 c0       	rjmp	.+142    	; 0x848 <DIO_u8GetPinValue+0xe0>
		case PORTA/*Port A*/: value=GetBit(PINA_REG,Copy_u8PinID);break;
 7ba:	e9 e3       	ldi	r30, 0x39	; 57
 7bc:	f0 e0       	ldi	r31, 0x00	; 0
 7be:	80 81       	ld	r24, Z
 7c0:	28 2f       	mov	r18, r24
 7c2:	30 e0       	ldi	r19, 0x00	; 0
 7c4:	8b 81       	ldd	r24, Y+3	; 0x03
 7c6:	88 2f       	mov	r24, r24
 7c8:	90 e0       	ldi	r25, 0x00	; 0
 7ca:	a9 01       	movw	r20, r18
 7cc:	02 c0       	rjmp	.+4      	; 0x7d2 <DIO_u8GetPinValue+0x6a>
 7ce:	55 95       	asr	r21
 7d0:	47 95       	ror	r20
 7d2:	8a 95       	dec	r24
 7d4:	e2 f7       	brpl	.-8      	; 0x7ce <DIO_u8GetPinValue+0x66>
 7d6:	ca 01       	movw	r24, r20
 7d8:	81 70       	andi	r24, 0x01	; 1
 7da:	89 83       	std	Y+1, r24	; 0x01
 7dc:	35 c0       	rjmp	.+106    	; 0x848 <DIO_u8GetPinValue+0xe0>
		case PORTB/*Port B*/: value=GetBit(PINB_REG,Copy_u8PinID);break;
 7de:	e6 e3       	ldi	r30, 0x36	; 54
 7e0:	f0 e0       	ldi	r31, 0x00	; 0
 7e2:	80 81       	ld	r24, Z
 7e4:	28 2f       	mov	r18, r24
 7e6:	30 e0       	ldi	r19, 0x00	; 0
 7e8:	8b 81       	ldd	r24, Y+3	; 0x03
 7ea:	88 2f       	mov	r24, r24
 7ec:	90 e0       	ldi	r25, 0x00	; 0
 7ee:	a9 01       	movw	r20, r18
 7f0:	02 c0       	rjmp	.+4      	; 0x7f6 <DIO_u8GetPinValue+0x8e>
 7f2:	55 95       	asr	r21
 7f4:	47 95       	ror	r20
 7f6:	8a 95       	dec	r24
 7f8:	e2 f7       	brpl	.-8      	; 0x7f2 <DIO_u8GetPinValue+0x8a>
 7fa:	ca 01       	movw	r24, r20
 7fc:	81 70       	andi	r24, 0x01	; 1
 7fe:	89 83       	std	Y+1, r24	; 0x01
 800:	23 c0       	rjmp	.+70     	; 0x848 <DIO_u8GetPinValue+0xe0>
		case PORTC/*Port C*/: value=GetBit(PINC_REG,Copy_u8PinID);break;
 802:	e3 e3       	ldi	r30, 0x33	; 51
 804:	f0 e0       	ldi	r31, 0x00	; 0
 806:	80 81       	ld	r24, Z
 808:	28 2f       	mov	r18, r24
 80a:	30 e0       	ldi	r19, 0x00	; 0
 80c:	8b 81       	ldd	r24, Y+3	; 0x03
 80e:	88 2f       	mov	r24, r24
 810:	90 e0       	ldi	r25, 0x00	; 0
 812:	a9 01       	movw	r20, r18
 814:	02 c0       	rjmp	.+4      	; 0x81a <DIO_u8GetPinValue+0xb2>
 816:	55 95       	asr	r21
 818:	47 95       	ror	r20
 81a:	8a 95       	dec	r24
 81c:	e2 f7       	brpl	.-8      	; 0x816 <DIO_u8GetPinValue+0xae>
 81e:	ca 01       	movw	r24, r20
 820:	81 70       	andi	r24, 0x01	; 1
 822:	89 83       	std	Y+1, r24	; 0x01
 824:	11 c0       	rjmp	.+34     	; 0x848 <DIO_u8GetPinValue+0xe0>
		case PORTD/*Port D*/: value=GetBit(PIND_REG,Copy_u8PinID);break;
 826:	e0 e3       	ldi	r30, 0x30	; 48
 828:	f0 e0       	ldi	r31, 0x00	; 0
 82a:	80 81       	ld	r24, Z
 82c:	28 2f       	mov	r18, r24
 82e:	30 e0       	ldi	r19, 0x00	; 0
 830:	8b 81       	ldd	r24, Y+3	; 0x03
 832:	88 2f       	mov	r24, r24
 834:	90 e0       	ldi	r25, 0x00	; 0
 836:	a9 01       	movw	r20, r18
 838:	02 c0       	rjmp	.+4      	; 0x83e <DIO_u8GetPinValue+0xd6>
 83a:	55 95       	asr	r21
 83c:	47 95       	ror	r20
 83e:	8a 95       	dec	r24
 840:	e2 f7       	brpl	.-8      	; 0x83a <DIO_u8GetPinValue+0xd2>
 842:	ca 01       	movw	r24, r20
 844:	81 70       	andi	r24, 0x01	; 1
 846:	89 83       	std	Y+1, r24	; 0x01
	}
	return value;
 848:	89 81       	ldd	r24, Y+1	; 0x01
}
 84a:	0f 90       	pop	r0
 84c:	0f 90       	pop	r0
 84e:	0f 90       	pop	r0
 850:	0f 90       	pop	r0
 852:	0f 90       	pop	r0
 854:	cf 91       	pop	r28
 856:	df 91       	pop	r29
 858:	08 95       	ret

0000085a <DIO_voidTogglePinValue>:

void DIO_voidTogglePinValue(u8 Copy_u8PortID,u8 Copy_u8PinID){
 85a:	df 93       	push	r29
 85c:	cf 93       	push	r28
 85e:	00 d0       	rcall	.+0      	; 0x860 <__stack+0x1>
 860:	00 d0       	rcall	.+0      	; 0x862 <__stack+0x3>
 862:	cd b7       	in	r28, 0x3d	; 61
 864:	de b7       	in	r29, 0x3e	; 62
 866:	89 83       	std	Y+1, r24	; 0x01
 868:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8PortID){
 86a:	89 81       	ldd	r24, Y+1	; 0x01
 86c:	28 2f       	mov	r18, r24
 86e:	30 e0       	ldi	r19, 0x00	; 0
 870:	3c 83       	std	Y+4, r19	; 0x04
 872:	2b 83       	std	Y+3, r18	; 0x03
 874:	8b 81       	ldd	r24, Y+3	; 0x03
 876:	9c 81       	ldd	r25, Y+4	; 0x04
 878:	81 30       	cpi	r24, 0x01	; 1
 87a:	91 05       	cpc	r25, r1
 87c:	49 f1       	breq	.+82     	; 0x8d0 <__stack+0x71>
 87e:	2b 81       	ldd	r18, Y+3	; 0x03
 880:	3c 81       	ldd	r19, Y+4	; 0x04
 882:	22 30       	cpi	r18, 0x02	; 2
 884:	31 05       	cpc	r19, r1
 886:	2c f4       	brge	.+10     	; 0x892 <__stack+0x33>
 888:	8b 81       	ldd	r24, Y+3	; 0x03
 88a:	9c 81       	ldd	r25, Y+4	; 0x04
 88c:	00 97       	sbiw	r24, 0x00	; 0
 88e:	61 f0       	breq	.+24     	; 0x8a8 <__stack+0x49>
 890:	5a c0       	rjmp	.+180    	; 0x946 <__stack+0xe7>
 892:	2b 81       	ldd	r18, Y+3	; 0x03
 894:	3c 81       	ldd	r19, Y+4	; 0x04
 896:	22 30       	cpi	r18, 0x02	; 2
 898:	31 05       	cpc	r19, r1
 89a:	71 f1       	breq	.+92     	; 0x8f8 <__stack+0x99>
 89c:	8b 81       	ldd	r24, Y+3	; 0x03
 89e:	9c 81       	ldd	r25, Y+4	; 0x04
 8a0:	83 30       	cpi	r24, 0x03	; 3
 8a2:	91 05       	cpc	r25, r1
 8a4:	e9 f1       	breq	.+122    	; 0x920 <__stack+0xc1>
 8a6:	4f c0       	rjmp	.+158    	; 0x946 <__stack+0xe7>
		case PORTA/*Port A*/: TogBit(PORTA_REG,Copy_u8PinID);break;
 8a8:	ab e3       	ldi	r26, 0x3B	; 59
 8aa:	b0 e0       	ldi	r27, 0x00	; 0
 8ac:	eb e3       	ldi	r30, 0x3B	; 59
 8ae:	f0 e0       	ldi	r31, 0x00	; 0
 8b0:	80 81       	ld	r24, Z
 8b2:	48 2f       	mov	r20, r24
 8b4:	8a 81       	ldd	r24, Y+2	; 0x02
 8b6:	28 2f       	mov	r18, r24
 8b8:	30 e0       	ldi	r19, 0x00	; 0
 8ba:	81 e0       	ldi	r24, 0x01	; 1
 8bc:	90 e0       	ldi	r25, 0x00	; 0
 8be:	02 2e       	mov	r0, r18
 8c0:	02 c0       	rjmp	.+4      	; 0x8c6 <__stack+0x67>
 8c2:	88 0f       	add	r24, r24
 8c4:	99 1f       	adc	r25, r25
 8c6:	0a 94       	dec	r0
 8c8:	e2 f7       	brpl	.-8      	; 0x8c2 <__stack+0x63>
 8ca:	84 27       	eor	r24, r20
 8cc:	8c 93       	st	X, r24
 8ce:	3b c0       	rjmp	.+118    	; 0x946 <__stack+0xe7>
		case PORTB/*Port B*/: TogBit(PORTB_REG,Copy_u8PinID);break;
 8d0:	a8 e3       	ldi	r26, 0x38	; 56
 8d2:	b0 e0       	ldi	r27, 0x00	; 0
 8d4:	e8 e3       	ldi	r30, 0x38	; 56
 8d6:	f0 e0       	ldi	r31, 0x00	; 0
 8d8:	80 81       	ld	r24, Z
 8da:	48 2f       	mov	r20, r24
 8dc:	8a 81       	ldd	r24, Y+2	; 0x02
 8de:	28 2f       	mov	r18, r24
 8e0:	30 e0       	ldi	r19, 0x00	; 0
 8e2:	81 e0       	ldi	r24, 0x01	; 1
 8e4:	90 e0       	ldi	r25, 0x00	; 0
 8e6:	02 2e       	mov	r0, r18
 8e8:	02 c0       	rjmp	.+4      	; 0x8ee <__stack+0x8f>
 8ea:	88 0f       	add	r24, r24
 8ec:	99 1f       	adc	r25, r25
 8ee:	0a 94       	dec	r0
 8f0:	e2 f7       	brpl	.-8      	; 0x8ea <__stack+0x8b>
 8f2:	84 27       	eor	r24, r20
 8f4:	8c 93       	st	X, r24
 8f6:	27 c0       	rjmp	.+78     	; 0x946 <__stack+0xe7>
		case PORTC/*Port C*/: TogBit(PORTC_REG,Copy_u8PinID);break;
 8f8:	a5 e3       	ldi	r26, 0x35	; 53
 8fa:	b0 e0       	ldi	r27, 0x00	; 0
 8fc:	e5 e3       	ldi	r30, 0x35	; 53
 8fe:	f0 e0       	ldi	r31, 0x00	; 0
 900:	80 81       	ld	r24, Z
 902:	48 2f       	mov	r20, r24
 904:	8a 81       	ldd	r24, Y+2	; 0x02
 906:	28 2f       	mov	r18, r24
 908:	30 e0       	ldi	r19, 0x00	; 0
 90a:	81 e0       	ldi	r24, 0x01	; 1
 90c:	90 e0       	ldi	r25, 0x00	; 0
 90e:	02 2e       	mov	r0, r18
 910:	02 c0       	rjmp	.+4      	; 0x916 <__stack+0xb7>
 912:	88 0f       	add	r24, r24
 914:	99 1f       	adc	r25, r25
 916:	0a 94       	dec	r0
 918:	e2 f7       	brpl	.-8      	; 0x912 <__stack+0xb3>
 91a:	84 27       	eor	r24, r20
 91c:	8c 93       	st	X, r24
 91e:	13 c0       	rjmp	.+38     	; 0x946 <__stack+0xe7>
		case PORTD/*Port D*/: TogBit(PORTD_REG,Copy_u8PinID);break;
 920:	a2 e3       	ldi	r26, 0x32	; 50
 922:	b0 e0       	ldi	r27, 0x00	; 0
 924:	e2 e3       	ldi	r30, 0x32	; 50
 926:	f0 e0       	ldi	r31, 0x00	; 0
 928:	80 81       	ld	r24, Z
 92a:	48 2f       	mov	r20, r24
 92c:	8a 81       	ldd	r24, Y+2	; 0x02
 92e:	28 2f       	mov	r18, r24
 930:	30 e0       	ldi	r19, 0x00	; 0
 932:	81 e0       	ldi	r24, 0x01	; 1
 934:	90 e0       	ldi	r25, 0x00	; 0
 936:	02 2e       	mov	r0, r18
 938:	02 c0       	rjmp	.+4      	; 0x93e <__stack+0xdf>
 93a:	88 0f       	add	r24, r24
 93c:	99 1f       	adc	r25, r25
 93e:	0a 94       	dec	r0
 940:	e2 f7       	brpl	.-8      	; 0x93a <__stack+0xdb>
 942:	84 27       	eor	r24, r20
 944:	8c 93       	st	X, r24
	}
}
 946:	0f 90       	pop	r0
 948:	0f 90       	pop	r0
 94a:	0f 90       	pop	r0
 94c:	0f 90       	pop	r0
 94e:	cf 91       	pop	r28
 950:	df 91       	pop	r29
 952:	08 95       	ret

00000954 <EXTI_voidInitialize>:

void (*EXTI0_GPfun)(void)=NULL;
void (*EXTI1_GPfun)(void)=NULL;
void (*EXTI2_GPfun)(void)=NULL;

void EXTI_voidInitialize(u8 Copy_u8INR_Num,u8 Copy_SenseCase){
 954:	df 93       	push	r29
 956:	cf 93       	push	r28
 958:	cd b7       	in	r28, 0x3d	; 61
 95a:	de b7       	in	r29, 0x3e	; 62
 95c:	2a 97       	sbiw	r28, 0x0a	; 10
 95e:	0f b6       	in	r0, 0x3f	; 63
 960:	f8 94       	cli
 962:	de bf       	out	0x3e, r29	; 62
 964:	0f be       	out	0x3f, r0	; 63
 966:	cd bf       	out	0x3d, r28	; 61
 968:	89 83       	std	Y+1, r24	; 0x01
 96a:	6a 83       	std	Y+2, r22	; 0x02
	
	switch(Copy_u8INR_Num){
 96c:	89 81       	ldd	r24, Y+1	; 0x01
 96e:	28 2f       	mov	r18, r24
 970:	30 e0       	ldi	r19, 0x00	; 0
 972:	3a 87       	std	Y+10, r19	; 0x0a
 974:	29 87       	std	Y+9, r18	; 0x09
 976:	89 85       	ldd	r24, Y+9	; 0x09
 978:	9a 85       	ldd	r25, Y+10	; 0x0a
 97a:	81 30       	cpi	r24, 0x01	; 1
 97c:	91 05       	cpc	r25, r1
 97e:	09 f4       	brne	.+2      	; 0x982 <EXTI_voidInitialize+0x2e>
 980:	3f c0       	rjmp	.+126    	; 0xa00 <EXTI_voidInitialize+0xac>
 982:	29 85       	ldd	r18, Y+9	; 0x09
 984:	3a 85       	ldd	r19, Y+10	; 0x0a
 986:	22 30       	cpi	r18, 0x02	; 2
 988:	31 05       	cpc	r19, r1
 98a:	09 f4       	brne	.+2      	; 0x98e <EXTI_voidInitialize+0x3a>
 98c:	6d c0       	rjmp	.+218    	; 0xa68 <EXTI_voidInitialize+0x114>
 98e:	89 85       	ldd	r24, Y+9	; 0x09
 990:	9a 85       	ldd	r25, Y+10	; 0x0a
 992:	00 97       	sbiw	r24, 0x00	; 0
 994:	09 f0       	breq	.+2      	; 0x998 <EXTI_voidInitialize+0x44>
 996:	8d c0       	rjmp	.+282    	; 0xab2 <EXTI_voidInitialize+0x15e>
		case EXTI0:
			SetBit(GICR,PIN6);
 998:	ab e5       	ldi	r26, 0x5B	; 91
 99a:	b0 e0       	ldi	r27, 0x00	; 0
 99c:	eb e5       	ldi	r30, 0x5B	; 91
 99e:	f0 e0       	ldi	r31, 0x00	; 0
 9a0:	80 81       	ld	r24, Z
 9a2:	80 64       	ori	r24, 0x40	; 64
 9a4:	8c 93       	st	X, r24
			switch(Copy_SenseCase){
 9a6:	8a 81       	ldd	r24, Y+2	; 0x02
 9a8:	28 2f       	mov	r18, r24
 9aa:	30 e0       	ldi	r19, 0x00	; 0
 9ac:	38 87       	std	Y+8, r19	; 0x08
 9ae:	2f 83       	std	Y+7, r18	; 0x07
 9b0:	8f 81       	ldd	r24, Y+7	; 0x07
 9b2:	98 85       	ldd	r25, Y+8	; 0x08
 9b4:	00 97       	sbiw	r24, 0x00	; 0
 9b6:	31 f0       	breq	.+12     	; 0x9c4 <EXTI_voidInitialize+0x70>
 9b8:	2f 81       	ldd	r18, Y+7	; 0x07
 9ba:	38 85       	ldd	r19, Y+8	; 0x08
 9bc:	21 30       	cpi	r18, 0x01	; 1
 9be:	31 05       	cpc	r19, r1
 9c0:	81 f0       	breq	.+32     	; 0x9e2 <EXTI_voidInitialize+0x8e>
 9c2:	77 c0       	rjmp	.+238    	; 0xab2 <EXTI_voidInitialize+0x15e>
				case RISING_EDGE:
					SetBit(MCUCR,PIN0);
 9c4:	a5 e5       	ldi	r26, 0x55	; 85
 9c6:	b0 e0       	ldi	r27, 0x00	; 0
 9c8:	e5 e5       	ldi	r30, 0x55	; 85
 9ca:	f0 e0       	ldi	r31, 0x00	; 0
 9cc:	80 81       	ld	r24, Z
 9ce:	81 60       	ori	r24, 0x01	; 1
 9d0:	8c 93       	st	X, r24
					SetBit(MCUCR,PIN1);
 9d2:	a5 e5       	ldi	r26, 0x55	; 85
 9d4:	b0 e0       	ldi	r27, 0x00	; 0
 9d6:	e5 e5       	ldi	r30, 0x55	; 85
 9d8:	f0 e0       	ldi	r31, 0x00	; 0
 9da:	80 81       	ld	r24, Z
 9dc:	82 60       	ori	r24, 0x02	; 2
 9de:	8c 93       	st	X, r24
 9e0:	68 c0       	rjmp	.+208    	; 0xab2 <EXTI_voidInitialize+0x15e>
					break;
				case FALLING_EDGE:
					ClrBit(MCUCR,PIN0);
 9e2:	a5 e5       	ldi	r26, 0x55	; 85
 9e4:	b0 e0       	ldi	r27, 0x00	; 0
 9e6:	e5 e5       	ldi	r30, 0x55	; 85
 9e8:	f0 e0       	ldi	r31, 0x00	; 0
 9ea:	80 81       	ld	r24, Z
 9ec:	8e 7f       	andi	r24, 0xFE	; 254
 9ee:	8c 93       	st	X, r24
					SetBit(MCUCR,PIN1);
 9f0:	a5 e5       	ldi	r26, 0x55	; 85
 9f2:	b0 e0       	ldi	r27, 0x00	; 0
 9f4:	e5 e5       	ldi	r30, 0x55	; 85
 9f6:	f0 e0       	ldi	r31, 0x00	; 0
 9f8:	80 81       	ld	r24, Z
 9fa:	82 60       	ori	r24, 0x02	; 2
 9fc:	8c 93       	st	X, r24
 9fe:	59 c0       	rjmp	.+178    	; 0xab2 <EXTI_voidInitialize+0x15e>
					break;
			}
			break;
		case EXTI1:
			SetBit(GICR,PIN7);
 a00:	ab e5       	ldi	r26, 0x5B	; 91
 a02:	b0 e0       	ldi	r27, 0x00	; 0
 a04:	eb e5       	ldi	r30, 0x5B	; 91
 a06:	f0 e0       	ldi	r31, 0x00	; 0
 a08:	80 81       	ld	r24, Z
 a0a:	80 68       	ori	r24, 0x80	; 128
 a0c:	8c 93       	st	X, r24
			switch(Copy_SenseCase){
 a0e:	8a 81       	ldd	r24, Y+2	; 0x02
 a10:	28 2f       	mov	r18, r24
 a12:	30 e0       	ldi	r19, 0x00	; 0
 a14:	3e 83       	std	Y+6, r19	; 0x06
 a16:	2d 83       	std	Y+5, r18	; 0x05
 a18:	8d 81       	ldd	r24, Y+5	; 0x05
 a1a:	9e 81       	ldd	r25, Y+6	; 0x06
 a1c:	00 97       	sbiw	r24, 0x00	; 0
 a1e:	31 f0       	breq	.+12     	; 0xa2c <EXTI_voidInitialize+0xd8>
 a20:	2d 81       	ldd	r18, Y+5	; 0x05
 a22:	3e 81       	ldd	r19, Y+6	; 0x06
 a24:	21 30       	cpi	r18, 0x01	; 1
 a26:	31 05       	cpc	r19, r1
 a28:	81 f0       	breq	.+32     	; 0xa4a <EXTI_voidInitialize+0xf6>
 a2a:	43 c0       	rjmp	.+134    	; 0xab2 <EXTI_voidInitialize+0x15e>
				case RISING_EDGE:
					SetBit(MCUCR,PIN2);
 a2c:	a5 e5       	ldi	r26, 0x55	; 85
 a2e:	b0 e0       	ldi	r27, 0x00	; 0
 a30:	e5 e5       	ldi	r30, 0x55	; 85
 a32:	f0 e0       	ldi	r31, 0x00	; 0
 a34:	80 81       	ld	r24, Z
 a36:	84 60       	ori	r24, 0x04	; 4
 a38:	8c 93       	st	X, r24
					SetBit(MCUCR,PIN3);
 a3a:	a5 e5       	ldi	r26, 0x55	; 85
 a3c:	b0 e0       	ldi	r27, 0x00	; 0
 a3e:	e5 e5       	ldi	r30, 0x55	; 85
 a40:	f0 e0       	ldi	r31, 0x00	; 0
 a42:	80 81       	ld	r24, Z
 a44:	88 60       	ori	r24, 0x08	; 8
 a46:	8c 93       	st	X, r24
 a48:	34 c0       	rjmp	.+104    	; 0xab2 <EXTI_voidInitialize+0x15e>
					break;
				case FALLING_EDGE:
					ClrBit(MCUCR,PIN2);
 a4a:	a5 e5       	ldi	r26, 0x55	; 85
 a4c:	b0 e0       	ldi	r27, 0x00	; 0
 a4e:	e5 e5       	ldi	r30, 0x55	; 85
 a50:	f0 e0       	ldi	r31, 0x00	; 0
 a52:	80 81       	ld	r24, Z
 a54:	8b 7f       	andi	r24, 0xFB	; 251
 a56:	8c 93       	st	X, r24
					SetBit(MCUCR,PIN3);
 a58:	a5 e5       	ldi	r26, 0x55	; 85
 a5a:	b0 e0       	ldi	r27, 0x00	; 0
 a5c:	e5 e5       	ldi	r30, 0x55	; 85
 a5e:	f0 e0       	ldi	r31, 0x00	; 0
 a60:	80 81       	ld	r24, Z
 a62:	88 60       	ori	r24, 0x08	; 8
 a64:	8c 93       	st	X, r24
 a66:	25 c0       	rjmp	.+74     	; 0xab2 <EXTI_voidInitialize+0x15e>
					break;
			}
			break;
		case EXTI2:
			SetBit(GICR,PIN5);
 a68:	ab e5       	ldi	r26, 0x5B	; 91
 a6a:	b0 e0       	ldi	r27, 0x00	; 0
 a6c:	eb e5       	ldi	r30, 0x5B	; 91
 a6e:	f0 e0       	ldi	r31, 0x00	; 0
 a70:	80 81       	ld	r24, Z
 a72:	80 62       	ori	r24, 0x20	; 32
 a74:	8c 93       	st	X, r24
			switch(Copy_SenseCase){
 a76:	8a 81       	ldd	r24, Y+2	; 0x02
 a78:	28 2f       	mov	r18, r24
 a7a:	30 e0       	ldi	r19, 0x00	; 0
 a7c:	3c 83       	std	Y+4, r19	; 0x04
 a7e:	2b 83       	std	Y+3, r18	; 0x03
 a80:	8b 81       	ldd	r24, Y+3	; 0x03
 a82:	9c 81       	ldd	r25, Y+4	; 0x04
 a84:	00 97       	sbiw	r24, 0x00	; 0
 a86:	31 f0       	breq	.+12     	; 0xa94 <EXTI_voidInitialize+0x140>
 a88:	2b 81       	ldd	r18, Y+3	; 0x03
 a8a:	3c 81       	ldd	r19, Y+4	; 0x04
 a8c:	21 30       	cpi	r18, 0x01	; 1
 a8e:	31 05       	cpc	r19, r1
 a90:	49 f0       	breq	.+18     	; 0xaa4 <EXTI_voidInitialize+0x150>
 a92:	0f c0       	rjmp	.+30     	; 0xab2 <EXTI_voidInitialize+0x15e>
				case RISING_EDGE:
					SetBit(MCUCSR,PIN6);
 a94:	a4 e5       	ldi	r26, 0x54	; 84
 a96:	b0 e0       	ldi	r27, 0x00	; 0
 a98:	e4 e5       	ldi	r30, 0x54	; 84
 a9a:	f0 e0       	ldi	r31, 0x00	; 0
 a9c:	80 81       	ld	r24, Z
 a9e:	80 64       	ori	r24, 0x40	; 64
 aa0:	8c 93       	st	X, r24
 aa2:	07 c0       	rjmp	.+14     	; 0xab2 <EXTI_voidInitialize+0x15e>
					break;
				case FALLING_EDGE:
					ClrBit(MCUCSR,PIN6);
 aa4:	a4 e5       	ldi	r26, 0x54	; 84
 aa6:	b0 e0       	ldi	r27, 0x00	; 0
 aa8:	e4 e5       	ldi	r30, 0x54	; 84
 aaa:	f0 e0       	ldi	r31, 0x00	; 0
 aac:	80 81       	ld	r24, Z
 aae:	8f 7b       	andi	r24, 0xBF	; 191
 ab0:	8c 93       	st	X, r24
					break;
			}
			break;
	}
}
 ab2:	2a 96       	adiw	r28, 0x0a	; 10
 ab4:	0f b6       	in	r0, 0x3f	; 63
 ab6:	f8 94       	cli
 ab8:	de bf       	out	0x3e, r29	; 62
 aba:	0f be       	out	0x3f, r0	; 63
 abc:	cd bf       	out	0x3d, r28	; 61
 abe:	cf 91       	pop	r28
 ac0:	df 91       	pop	r29
 ac2:	08 95       	ret

00000ac4 <EXTI0_SetCallBack>:

void EXTI0_SetCallBack(void(*ptr)(void)){
 ac4:	df 93       	push	r29
 ac6:	cf 93       	push	r28
 ac8:	00 d0       	rcall	.+0      	; 0xaca <EXTI0_SetCallBack+0x6>
 aca:	cd b7       	in	r28, 0x3d	; 61
 acc:	de b7       	in	r29, 0x3e	; 62
 ace:	9a 83       	std	Y+2, r25	; 0x02
 ad0:	89 83       	std	Y+1, r24	; 0x01
	EXTI0_GPfun=ptr;
 ad2:	89 81       	ldd	r24, Y+1	; 0x01
 ad4:	9a 81       	ldd	r25, Y+2	; 0x02
 ad6:	90 93 61 00 	sts	0x0061, r25
 ada:	80 93 60 00 	sts	0x0060, r24
}
 ade:	0f 90       	pop	r0
 ae0:	0f 90       	pop	r0
 ae2:	cf 91       	pop	r28
 ae4:	df 91       	pop	r29
 ae6:	08 95       	ret

00000ae8 <EXTI1_SetCallBack>:

void EXTI1_SetCallBack(void(*ptr)(void)){
 ae8:	df 93       	push	r29
 aea:	cf 93       	push	r28
 aec:	00 d0       	rcall	.+0      	; 0xaee <EXTI1_SetCallBack+0x6>
 aee:	cd b7       	in	r28, 0x3d	; 61
 af0:	de b7       	in	r29, 0x3e	; 62
 af2:	9a 83       	std	Y+2, r25	; 0x02
 af4:	89 83       	std	Y+1, r24	; 0x01
	EXTI1_GPfun=ptr;
 af6:	89 81       	ldd	r24, Y+1	; 0x01
 af8:	9a 81       	ldd	r25, Y+2	; 0x02
 afa:	90 93 63 00 	sts	0x0063, r25
 afe:	80 93 62 00 	sts	0x0062, r24
}
 b02:	0f 90       	pop	r0
 b04:	0f 90       	pop	r0
 b06:	cf 91       	pop	r28
 b08:	df 91       	pop	r29
 b0a:	08 95       	ret

00000b0c <EXTI2_SetCallBack>:

void EXTI2_SetCallBack(void(*ptr)(void)){
 b0c:	df 93       	push	r29
 b0e:	cf 93       	push	r28
 b10:	00 d0       	rcall	.+0      	; 0xb12 <EXTI2_SetCallBack+0x6>
 b12:	cd b7       	in	r28, 0x3d	; 61
 b14:	de b7       	in	r29, 0x3e	; 62
 b16:	9a 83       	std	Y+2, r25	; 0x02
 b18:	89 83       	std	Y+1, r24	; 0x01
	EXTI2_GPfun=ptr;
 b1a:	89 81       	ldd	r24, Y+1	; 0x01
 b1c:	9a 81       	ldd	r25, Y+2	; 0x02
 b1e:	90 93 65 00 	sts	0x0065, r25
 b22:	80 93 64 00 	sts	0x0064, r24
}
 b26:	0f 90       	pop	r0
 b28:	0f 90       	pop	r0
 b2a:	cf 91       	pop	r28
 b2c:	df 91       	pop	r29
 b2e:	08 95       	ret

00000b30 <__vector_1>:

void __vector_1()__attribute__((signal));   // EXTI0
void __vector_1(){
 b30:	1f 92       	push	r1
 b32:	0f 92       	push	r0
 b34:	0f b6       	in	r0, 0x3f	; 63
 b36:	0f 92       	push	r0
 b38:	11 24       	eor	r1, r1
 b3a:	2f 93       	push	r18
 b3c:	3f 93       	push	r19
 b3e:	4f 93       	push	r20
 b40:	5f 93       	push	r21
 b42:	6f 93       	push	r22
 b44:	7f 93       	push	r23
 b46:	8f 93       	push	r24
 b48:	9f 93       	push	r25
 b4a:	af 93       	push	r26
 b4c:	bf 93       	push	r27
 b4e:	ef 93       	push	r30
 b50:	ff 93       	push	r31
 b52:	df 93       	push	r29
 b54:	cf 93       	push	r28
 b56:	cd b7       	in	r28, 0x3d	; 61
 b58:	de b7       	in	r29, 0x3e	; 62
	
	if(EXTI0_GPfun!=NULL){
 b5a:	80 91 60 00 	lds	r24, 0x0060
 b5e:	90 91 61 00 	lds	r25, 0x0061
 b62:	00 97       	sbiw	r24, 0x00	; 0
 b64:	29 f0       	breq	.+10     	; 0xb70 <__vector_1+0x40>
		EXTI0_GPfun();
 b66:	e0 91 60 00 	lds	r30, 0x0060
 b6a:	f0 91 61 00 	lds	r31, 0x0061
 b6e:	09 95       	icall
	}
}
 b70:	cf 91       	pop	r28
 b72:	df 91       	pop	r29
 b74:	ff 91       	pop	r31
 b76:	ef 91       	pop	r30
 b78:	bf 91       	pop	r27
 b7a:	af 91       	pop	r26
 b7c:	9f 91       	pop	r25
 b7e:	8f 91       	pop	r24
 b80:	7f 91       	pop	r23
 b82:	6f 91       	pop	r22
 b84:	5f 91       	pop	r21
 b86:	4f 91       	pop	r20
 b88:	3f 91       	pop	r19
 b8a:	2f 91       	pop	r18
 b8c:	0f 90       	pop	r0
 b8e:	0f be       	out	0x3f, r0	; 63
 b90:	0f 90       	pop	r0
 b92:	1f 90       	pop	r1
 b94:	18 95       	reti

00000b96 <__vector_2>:

void __vector_2()__attribute__((signal));   // EXTI1
void __vector_2(){
 b96:	1f 92       	push	r1
 b98:	0f 92       	push	r0
 b9a:	0f b6       	in	r0, 0x3f	; 63
 b9c:	0f 92       	push	r0
 b9e:	11 24       	eor	r1, r1
 ba0:	2f 93       	push	r18
 ba2:	3f 93       	push	r19
 ba4:	4f 93       	push	r20
 ba6:	5f 93       	push	r21
 ba8:	6f 93       	push	r22
 baa:	7f 93       	push	r23
 bac:	8f 93       	push	r24
 bae:	9f 93       	push	r25
 bb0:	af 93       	push	r26
 bb2:	bf 93       	push	r27
 bb4:	ef 93       	push	r30
 bb6:	ff 93       	push	r31
 bb8:	df 93       	push	r29
 bba:	cf 93       	push	r28
 bbc:	cd b7       	in	r28, 0x3d	; 61
 bbe:	de b7       	in	r29, 0x3e	; 62
	
	if(EXTI1_GPfun!=NULL){
 bc0:	80 91 62 00 	lds	r24, 0x0062
 bc4:	90 91 63 00 	lds	r25, 0x0063
 bc8:	00 97       	sbiw	r24, 0x00	; 0
 bca:	29 f0       	breq	.+10     	; 0xbd6 <__vector_2+0x40>
		EXTI1_GPfun();
 bcc:	e0 91 62 00 	lds	r30, 0x0062
 bd0:	f0 91 63 00 	lds	r31, 0x0063
 bd4:	09 95       	icall
	}
}
 bd6:	cf 91       	pop	r28
 bd8:	df 91       	pop	r29
 bda:	ff 91       	pop	r31
 bdc:	ef 91       	pop	r30
 bde:	bf 91       	pop	r27
 be0:	af 91       	pop	r26
 be2:	9f 91       	pop	r25
 be4:	8f 91       	pop	r24
 be6:	7f 91       	pop	r23
 be8:	6f 91       	pop	r22
 bea:	5f 91       	pop	r21
 bec:	4f 91       	pop	r20
 bee:	3f 91       	pop	r19
 bf0:	2f 91       	pop	r18
 bf2:	0f 90       	pop	r0
 bf4:	0f be       	out	0x3f, r0	; 63
 bf6:	0f 90       	pop	r0
 bf8:	1f 90       	pop	r1
 bfa:	18 95       	reti

00000bfc <__vector_3>:

void __vector_3()__attribute__((signal));   // EXTI2
void __vector_3(){
 bfc:	1f 92       	push	r1
 bfe:	0f 92       	push	r0
 c00:	0f b6       	in	r0, 0x3f	; 63
 c02:	0f 92       	push	r0
 c04:	11 24       	eor	r1, r1
 c06:	2f 93       	push	r18
 c08:	3f 93       	push	r19
 c0a:	4f 93       	push	r20
 c0c:	5f 93       	push	r21
 c0e:	6f 93       	push	r22
 c10:	7f 93       	push	r23
 c12:	8f 93       	push	r24
 c14:	9f 93       	push	r25
 c16:	af 93       	push	r26
 c18:	bf 93       	push	r27
 c1a:	ef 93       	push	r30
 c1c:	ff 93       	push	r31
 c1e:	df 93       	push	r29
 c20:	cf 93       	push	r28
 c22:	cd b7       	in	r28, 0x3d	; 61
 c24:	de b7       	in	r29, 0x3e	; 62
	
	if(EXTI2_GPfun!=NULL){
 c26:	80 91 64 00 	lds	r24, 0x0064
 c2a:	90 91 65 00 	lds	r25, 0x0065
 c2e:	00 97       	sbiw	r24, 0x00	; 0
 c30:	29 f0       	breq	.+10     	; 0xc3c <__vector_3+0x40>
		EXTI2_GPfun();
 c32:	e0 91 64 00 	lds	r30, 0x0064
 c36:	f0 91 65 00 	lds	r31, 0x0065
 c3a:	09 95       	icall
	}
}
 c3c:	cf 91       	pop	r28
 c3e:	df 91       	pop	r29
 c40:	ff 91       	pop	r31
 c42:	ef 91       	pop	r30
 c44:	bf 91       	pop	r27
 c46:	af 91       	pop	r26
 c48:	9f 91       	pop	r25
 c4a:	8f 91       	pop	r24
 c4c:	7f 91       	pop	r23
 c4e:	6f 91       	pop	r22
 c50:	5f 91       	pop	r21
 c52:	4f 91       	pop	r20
 c54:	3f 91       	pop	r19
 c56:	2f 91       	pop	r18
 c58:	0f 90       	pop	r0
 c5a:	0f be       	out	0x3f, r0	; 63
 c5c:	0f 90       	pop	r0
 c5e:	1f 90       	pop	r1
 c60:	18 95       	reti

00000c62 <GIE_voidEnable>:
#include "Bit_Math.h"
#include "DIO_interface.h"
#include "GIE_private.h"
#include "GIE_interface.h"

void GIE_voidEnable(){
 c62:	df 93       	push	r29
 c64:	cf 93       	push	r28
 c66:	cd b7       	in	r28, 0x3d	; 61
 c68:	de b7       	in	r29, 0x3e	; 62

	SetBit(SREG,PIN7);
 c6a:	af e5       	ldi	r26, 0x5F	; 95
 c6c:	b0 e0       	ldi	r27, 0x00	; 0
 c6e:	ef e5       	ldi	r30, 0x5F	; 95
 c70:	f0 e0       	ldi	r31, 0x00	; 0
 c72:	80 81       	ld	r24, Z
 c74:	80 68       	ori	r24, 0x80	; 128
 c76:	8c 93       	st	X, r24
}
 c78:	cf 91       	pop	r28
 c7a:	df 91       	pop	r29
 c7c:	08 95       	ret

00000c7e <GIE_voidDisable>:

void GIE_voidDisable(){
 c7e:	df 93       	push	r29
 c80:	cf 93       	push	r28
 c82:	cd b7       	in	r28, 0x3d	; 61
 c84:	de b7       	in	r29, 0x3e	; 62

	ClrBit(SREG,PIN7);
 c86:	af e5       	ldi	r26, 0x5F	; 95
 c88:	b0 e0       	ldi	r27, 0x00	; 0
 c8a:	ef e5       	ldi	r30, 0x5F	; 95
 c8c:	f0 e0       	ldi	r31, 0x00	; 0
 c8e:	80 81       	ld	r24, Z
 c90:	8f 77       	andi	r24, 0x7F	; 127
 c92:	8c 93       	st	X, r24
 c94:	cf 91       	pop	r28
 c96:	df 91       	pop	r29
 c98:	08 95       	ret

00000c9a <func>:
#include "Bit_Math.h"
#include "DIO_interface.h"
#include "GIE_interface.h"
#include "EXTI_interface.h"

void func(void){
 c9a:	df 93       	push	r29
 c9c:	cf 93       	push	r28
 c9e:	cd b7       	in	r28, 0x3d	; 61
 ca0:	de b7       	in	r29, 0x3e	; 62
	DIO_voidSetPinDirection(PORTA,PIN0,PIN_OUTPUT);
 ca2:	80 e0       	ldi	r24, 0x00	; 0
 ca4:	60 e0       	ldi	r22, 0x00	; 0
 ca6:	41 e0       	ldi	r20, 0x01	; 1
 ca8:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_voidSetPinDirection>
	DIO_voidSetPinValue(PORTA,PIN0,PIN_HIGH);
 cac:	80 e0       	ldi	r24, 0x00	; 0
 cae:	60 e0       	ldi	r22, 0x00	; 0
 cb0:	41 e0       	ldi	r20, 0x01	; 1
 cb2:	0e 94 3e 01 	call	0x27c	; 0x27c <DIO_voidSetPinValue>
}
 cb6:	cf 91       	pop	r28
 cb8:	df 91       	pop	r29
 cba:	08 95       	ret

00000cbc <main>:

int main(){
 cbc:	df 93       	push	r29
 cbe:	cf 93       	push	r28
 cc0:	cd b7       	in	r28, 0x3d	; 61
 cc2:	de b7       	in	r29, 0x3e	; 62

	GIE_voidEnable();
 cc4:	0e 94 31 06 	call	0xc62	; 0xc62 <GIE_voidEnable>
	EXTI_voidInitialize(EXTI0,FALLING_EDGE);
 cc8:	80 e0       	ldi	r24, 0x00	; 0
 cca:	61 e0       	ldi	r22, 0x01	; 1
 ccc:	0e 94 aa 04 	call	0x954	; 0x954 <EXTI_voidInitialize>

	EXTI0_SetCallBack(func);
 cd0:	8d e4       	ldi	r24, 0x4D	; 77
 cd2:	96 e0       	ldi	r25, 0x06	; 6
 cd4:	0e 94 62 05 	call	0xac4	; 0xac4 <EXTI0_SetCallBack>
 cd8:	ff cf       	rjmp	.-2      	; 0xcd8 <main+0x1c>

00000cda <_exit>:
 cda:	f8 94       	cli

00000cdc <__stop_program>:
 cdc:	ff cf       	rjmp	.-2      	; 0xcdc <__stop_program>
